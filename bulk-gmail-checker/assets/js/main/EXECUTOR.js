const server1=`${SERVER_URL}/check1`,server2=`${SERVER_URL}/check2`,fastServer1=`${SERVER_URL}/fastcheck1`,fastServer2=`${SERVER_URL}/fastcheck2`,ALL_SERVERS=[server1,server2,fastServer1,fastServer2];let selectedServer,abortController=null,chunks=[],currentProgress=0,availableServersForChunk=[],serverAttemptCounts={};const REQUEST_TIMEOUT=2e4;async function EXECUTE(){if(invalidEmails.length>0)return;emailInput.value=validEmails.join("\n");const e=emailInput.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0));if(0===e.length)return;const t=isLanguageID?{generating:"<p>MEMBUAT KUNCI API</p><p>SILAHKAN TUNGGU...</p>",error:"KESALAHAN: GAGAL MEMBUAT KUNCI API. SILAKAN COBA LAGI.",button:'<i class="fas fa-play"></i> EKSEKUSI',initError:"Gagal menginisialisasi kunci API untuk dieksekusi.",processing:"MEMPROSES...",executionCompleted:"EKSEKUSI SELESAI!",executionCancelled:"EKSEKUSI DIBATALKAN",serverTooLong:"Terlalu lama, mencoba server lain. Silahkan tunggu...",serverError:"Kesalahan server, mencoba server lain...",allServersFailed:"Semua server gagal untuk chunk ini."}:{generating:"<p>GENERATING API KEY</p><p>PLEASE WAIT...</p>",error:"ERROR: FAILED TO GENERATE API KEY. PLEASE TRY AGAIN.",button:'<i class="fas fa-play"></i> EXECUTE',initError:"Failed to initialize API key for execution.",processing:"PROCESSING...",executionCompleted:"EXECUTION COMPLETED!",executionCancelled:"EXECUTION CANCELLED",serverTooLong:"Too long, trying another server. Please wait...",serverError:"Server error, trying another server...",allServersFailed:"All servers failed for this chunk."};if(!APIKEY){systemMessage.innerHTML=t.generating,executeBtn.innerHTML='<div class="loading-spinner"></div>';try{const e=await handleGenerateKey();APIKEY=e.APIKEY,executeBtn.innerHTML=t.button}catch(e){throw unsetExecutionUi(),executeBtn.innerHTML=t.button,systemMessage.textContent=t.error,console.error(t.initError,e),new Error(t.initError)}}let s,r;setExecutionUi(),selectedServer=document.querySelector('input[name="server"]:checked').value,"server1"===selectedServer||"server2"===selectedServer?(s=100,r="server1"===selectedServer?server1:server2):(s=1e4,r="fastServer1"===selectedServer?fastServer1:fastServer2),chunks=[];for(let t=0;t<e.length;t+=s)chunks.push(e.slice(t,t+s));results=[],abortController=new AbortController,currentProgress=0,updateProgressBar(0),systemMessage.textContent=t.processing;try{const e=await processChunksWithServerFallback(chunks,r,t);if(abortController.signal.aborted)throw new Error("Aborted by user.");await animateProgressBar(currentProgress,100),progressOverlay.classList.add("hidden"),stopButttonContainer.classList.add("hidden"),outputButtonContainer.classList.remove("hidden"),apiStats.classList.remove("hidden"),closStatsAbsolute.classList.remove("hidden"),systemMessage.textContent=t.executionCompleted,"function"==typeof saveCurrentResults?await saveCurrentResults(e):(console.warn("saveCurrentResults not available, skipping history save"),setTimeout((()=>{"function"==typeof initHistorySystem&&initHistorySystem().then((()=>{"function"==typeof saveCurrentResults&&saveCurrentResults(e)}))}),500)),"function"==typeof updateApiStatsAfterExecution?await updateApiStatsAfterExecution(results.length):console.warn("updateApiStatsAfterExecution not available, skipping stats update"),updateCounters(),resultListContainer.scrollTop=0,displayResults()}catch(e){"EXECUTION CANCELLED"===e.name||"Aborted by user."===e.message||(console.error("Execution error:",e),unsetExecutionUi(),systemMessage.textContent=`${e.message}`)}}async function processChunksWithServerFallback(e,t,s){if(abortController.signal.aborted)return;let r=null;for(let n=0;n<e.length;n++){if(abortController.signal.aborted)throw new Error("EXECUTION CANCELLED");const a=e[n],i=(n+1)/e.length*100;availableServersForChunk=[t,...ALL_SERVERS.filter((e=>e!==t))],serverAttemptCounts={};let o=!1;for(let e=0;e<availableServersForChunk.length;e++){let t=availableServersForChunk[e];if(abortController.signal.aborted)throw new Error("EXECUTION CANCELLED");for(serverAttemptCounts[t]=serverAttemptCounts[t]||0;serverAttemptCounts[t]<2;){if(abortController.signal.aborted)throw new Error("EXECUTION CANCELLED");try{const e=await fetchWithTimeout(t,{method:"POST",headers:{Authorization:`Bearer ${APIKEY}`,"Content-Type":"application/json"},body:JSON.stringify({mail:a})},REQUEST_TIMEOUT,abortController.signal);if(abortController.signal.aborted)throw new Error("EXECUTION CANCELLED");if(!e.ok)throw serverAttemptCounts[t]++,systemMessage.textContent=s.serverError,await new Promise((e=>setTimeout(e,500))),new Error(`Server returned ${e.status}: ${e.statusText}`);if(processApiResponse(await e.json(),t),t===server1||t===server2?r="normal":t!==fastServer1&&t!==fastServer2||(r="fast"),abortController.signal.aborted)throw new Error("EXECUTION CANCELLED");if(updateCounters(),displayResults(),await animateProgressBar(currentProgress,i),abortController.signal.aborted)throw new Error("EXECUTION CANCELLED");systemMessage.textContent=`${s.processing} ${currentProgress.toFixed(0)}%`,o=!0;break}catch(e){if("EXECUTION CANCELLED"===e.name)throw e;"Request timeout (20 seconds)"===e.message?systemMessage.textContent=s.serverTooLong:e.message.includes("Server returned")&&(systemMessage.textContent=s.serverError),console.warn(`Error with ${t} (attempt ${serverAttemptCounts[t]}):`,e.message),serverAttemptCounts[t]++,await new Promise((e=>setTimeout(e,500)))}}if(o)break;e<availableServersForChunk.length-1&&(systemMessage.textContent=`${s.serverTooLong}`,await new Promise((e=>setTimeout(e,1e3))))}if(!o)throw console.error(`Gagal memproses chunk ${n} setelah mencoba semua server.`),systemMessage.textContent=s.allServersFailed,new Error(s.allServersFailed);if(n<e.length-1&&(await new Promise((e=>setTimeout(e,10))),abortController.signal.aborted))throw new Error("EXECUTION CANCELLED")}return setFilterButtonVisibility(r),r}function fetchWithTimeout(e,t,s,r){return new Promise(((n,a)=>{const i=new AbortController,o=setTimeout((()=>{i.abort(),a(new Error(`Request timeout (${s/1e3} seconds)`))}),s);r&&r.addEventListener("abort",(()=>{clearTimeout(o),i.abort(),a(new Error("EXECUTION CANCELLED"))}),{once:!0}),t.signal=i.signal,fetch(e,t).then((e=>{clearTimeout(o),n(e)})).catch((e=>{clearTimeout(o),a(e)}))}))}function processApiResponse(e,t){if(abortController&&abortController.signal.aborted)return;if(!Array.isArray(e))return void console.error("Invalid API response:",e);const s=t===server1||t===server2;s?(verifyFilterBtn.classList.remove("hidden"),unregisteredFilterBtn.classList.remove("hidden"),disabledFilterBtn.classList.remove("hidden")):(verifyFilterBtn.classList.add("hidden"),unregisteredFilterBtn.classList.add("hidden"),disabledFilterBtn.classList.add("hidden")),e.forEach((e=>{let t=e.status.toLowerCase();if(s){t={bad:"bad",error:"bad",disabled:"disabled",live:"live",verify:"verify",unregistered:"unregistered"}[t]||"error"}else t="live"===t?"live":"bad";results.push({email:e.email,status:t,details:e.details||"Validated"})}))}function setFilterButtonVisibility(e){"normal"===e?(verifyFilterBtn.classList.remove("hidden"),unregisteredFilterBtn.classList.remove("hidden"),disabledFilterBtn.classList.remove("hidden")):"fast"===e&&(verifyFilterBtn.classList.add("hidden"),unregisteredFilterBtn.classList.add("hidden"),disabledFilterBtn.classList.add("hidden"))}function cancelExecution(){abortController&&(abortController.abort(),unsetExecutionUi(),isLanguageID?systemMessage.textContent="EKSEKUSI DIBATALKAN":systemMessage.textContent="EXECUTION CANCELLED")}function updateProgressBar(e){const t=Math.min(100,Math.max(0,e));donutChart.style.background=`conic-gradient(#cc0000 ${t}%, #333 ${t}% 100%)`,progressText.textContent=`${t.toFixed(0)}%`}async function animateProgressBar(e,t){const s=10*Math.abs(t-e),r=performance.now();return new Promise((n=>{requestAnimationFrame((function a(i){const o=i-r,l=Math.min(1,o/s),d=e+(t-e)*l;updateProgressBar(d),currentProgress=d,l<1&&!abortController.signal.aborted?requestAnimationFrame(a):(updateProgressBar(t),currentProgress=t,n())}))}))}async function cacheAndLoadVideo(e,t){const s="videos",r=await new Promise(((e,t)=>{const r=indexedDB.open("VideoCacheDB",1);r.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains(s)||t.createObjectStore(s)},r.onsuccess=t=>e(t.target.result),r.onerror=e=>t(e.target.error)})),n=await new Promise(((t,n)=>{const a=r.transaction(s,"readonly").objectStore(s).get(e);a.onsuccess=e=>t(e.target.result),a.onerror=e=>n(e.target.error)}));if(n)return URL.createObjectURL(n);const a=await fetch(t),i=await a.blob();return await new Promise(((t,n)=>{const a=r.transaction(s,"readwrite").objectStore(s).put(i,e);a.onsuccess=t,a.onerror=e=>n(e.target.error)})),URL.createObjectURL(i)}function resetSystem(){createLoadingAnimation(duration="fast"),isExecution=!1,systemMessageBlocked=!1,videoSrc.src="",executionBackground.classList.add("hidden"),results=[],currentFilter="all",filterBtns.forEach((e=>{e.classList.remove("active"),"all"===e.dataset.filter&&e.classList.add("active")})),resultList.innerHTML="",resultList.style.height="auto",resultListContainer.scrollTop=0,updateCounters(),updateProgressBar(0),inputSection.classList.remove("hidden"),emailInput.scrollTop=emailInput.scrollHeight,serverSelectionContainer.classList.remove("hidden"),inputButtonContainer.classList.remove("hidden"),myAccountButton.classList.remove("hidden"),systemInfoContainer.classList.remove("hidden"),closStatsAbsolute.classList.add("hidden"),executeBtn.disabled=!1,clearInputBtn.disabled=!1,pasteBtn.disabled=!1,uploadBtn.disabled=!1,executeBtn.innerHTML="",isLanguageID?executeBtn.innerHTML='<i class="fas fa-play"></i> EKSEKUSI':executeBtn.innerHTML='<i class="fas fa-play"></i> EXECUTE',validateInput(),systemMessage.style.cssText="",isLanguageID?systemMessage.textContent="SISTEM TELAH DIRESET.":systemMessage.textContent="SYSTEM HAS BEEN RESET.",outputSection.classList.add("hidden"),outputButtonContainer.classList.add("hidden"),progressOverlay.classList.add("hidden"),apiStats.classList.add("hidden"),blockUpdateMessages(!1),updateExecutionStatus(!1),verifyFilterBtn.classList.add("hidden"),unregisteredFilterBtn.classList.add("hidden"),disabledFilterBtn.classList.add("hidden")}function backToMain(){results=[],currentFilter="all",filterBtns.forEach((e=>{e.classList.remove("active"),"all"===e.dataset.filter&&e.classList.add("active")})),resultList.innerHTML="",resultList.style.height="auto",resultListContainer.scrollTop=0,updateCounters(),inputSection.classList.remove("hidden"),emailInput.scrollTop=emailInput.scrollHeight,serverSelectionContainer.classList.remove("hidden"),inputButtonContainer.classList.remove("hidden"),clearInputBtn.classList.remove("hidden"),clearErrorsBtn.classList.add("hidden"),resetBtn.classList.remove("hidden"),backMyAccountBtn.classList.add("hidden"),validateInput(),systemMessage.style.cssText="",isLanguageID?systemMessage.textContent="MENUNGGU PERINTAH...":systemMessage.textContent="AWAITING COMMAND...",isLanguageID?resultTitle.textContent="HASIL":resultTitle.textContent="RESULTS",document.querySelector("main").style.background="",backgroundGlow.style.cssText="",outputSection.classList.add("hidden"),outputButtonContainer.classList.add("hidden"),progressOverlay.classList.add("hidden"),apiStats.classList.add("hidden"),blockUpdateMessages(!1),updateExecutionStatus(!1),verifyFilterBtn.classList.add("hidden"),unregisteredFilterBtn.classList.add("hidden"),disabledFilterBtn.classList.add("hidden")}async function setExecutionUi(){isExecution=!0,systemMessageBlocked=!0;const e=isMobile?isLanguageID?"../../assets/video/dragon-bulk-gmail-checker-background-mob.mp4":"../assets/video/dragon-bulk-gmail-checker-background-mob.mp4":isLanguageID?"../../assets/video/dragon-bulk-gmail-checker-background-desk.mp4":"../assets/video/dragon-bulk-gmail-checker-background-desk.mp4",t=isMobile?"video_mobile":"video_desktop",s=await cacheAndLoadVideo(t,e);videoSrc.src=s,executionBackground.classList.remove("hidden"),executionBackground.load(),progressOverlay.classList.remove("hidden"),stopButttonContainer.classList.remove("hidden"),executeBtn.disabled=!0,clearInputBtn.disabled=!0,pasteBtn.disabled=!0,uploadBtn.disabled=!0,systemMessage.style.innerHTML="",systemMessage.style.cssText="",backMyAccountBtn.classList.add("hidden"),executeBtn.disabled=!0,serverSelectionContainer.classList.add("hidden"),myAccountButton.classList.add("hidden"),errorInfo.classList.add("hidden"),inputButtonContainer.classList.add("hidden"),inputSection.classList.add("hidden"),systemInfoContainer.classList.remove("hidden"),outputSection.classList.remove("hidden"),resetBtn.classList.remove("hidden"),blockUpdateMessages(!0),updateExecutionStatus(!0),verifyFilterBtn.classList.add("hidden"),unregisteredFilterBtn.classList.add("hidden"),disabledFilterBtn.classList.add("hidden")}function unsetExecutionUi(){createLoadingAnimation(duration="fast"),isExecution=!1,systemMessageBlocked=!1,videoSrc.src="",executionBackground.classList.add("hidden"),results=[],currentFilter="all",filterBtns.forEach((e=>{e.classList.remove("active"),"all"===e.dataset.filter&&e.classList.add("active")})),resultList.innerHTML="",resultList.style.height="auto",resultListContainer.scrollTop=0,updateCounters(),updateProgressBar(0),progressOverlay.classList.add("hidden"),inputSection.classList.remove("hidden"),inputButtonContainer.classList.remove("hidden"),serverSelectionContainer.classList.remove("hidden"),systemInfoContainer.classList.remove("hidden"),executeBtn.disabled=!1,clearInputBtn.classList.remove("hidden"),clearErrorsBtn.classList.add("hidden"),myAccountButton.classList.remove("hidden"),systemMessage.style.innerHTML="",systemMessage.style.cssText="",executeBtn.disabled=!1,clearInputBtn.disabled=!1,pasteBtn.disabled=!1,uploadBtn.disabled=!1,validateInput(),resetBtn.classList.add("hidden"),stopButttonContainer.classList.add("hidden"),outputSection.classList.add("hidden"),systemInfoContainer.classList.remove("hidden"),closStatsAbsolute.classList.add("hidden"),blockUpdateMessages(!1),updateExecutionStatus(!1),verifyFilterBtn.classList.add("hidden"),unregisteredFilterBtn.classList.add("hidden"),disabledFilterBtn.classList.add("hidden")}