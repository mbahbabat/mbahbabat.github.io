const docBody=document.body,docHead=document.head,LOGO_CACHE_KEY="cached_logo_image",BACKGROUND_CACHE_KEY="cached_background_image";let systemDelayStatus,systemDelay;async function createLoadingAnimation(e="slow"){const t="loading-overlay-5161774";let a,o,i;"slow"===e?(a=3500,o="1.5s",i="1.5s"):"normal"===e?(a=2e3,o="1s",i="1s"):"fast"===e&&(a=750,o="0.5s",i="0.5s");const n=document.getElementById(t);n&&n.remove();const r=` #loading-overlay-5161774 { background: radial-gradient(circle, rgba(26, 26, 26, 1) 0%, var(--primary-red) 60%, rgba(26, 26, 26, 1) 100%); position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; z-index: 10000; opacity: 1; transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out; } #${t}.fade-out { opacity: 0; visibility: hidden; } #${t} .loading-container { display: flex; flex-direction: column; gap: 10px; text-align: center; color: white; transform: scale(1); transition: transform 0.3s ease-out; } #${t}.fade-out .loading-container { transform: scale(5); } #${t} .typewriter-text { overflow: hidden; border-right: .15em solid #4CAF50; white-space: nowrap; margin: 0 auto; animation: ${t}_typing ${i} steps(30,end) forwards, ${t}_blink .5s step-end infinite; } @keyframes ${t}_typing { from { width: 0 } to { width: 100% } } @keyframes ${t}_blink { from, to { border-color: transparent } 50% { border-color: #4caf50 } } #${t} .progress-container-loading { width: 100%; height: 10px; background-color: rgba(255,255,255,0.2); border-radius: 10px; margin-top: 20px; overflow: hidden; position: relative; } #${t} .progress-bar-loading { height: 100%; width: 0; background: linear-gradient(90deg, red, #4CAF50); border-radius: 10px; animation: ${t}_progress ${o} cubic-bezier(0.4, 0, 0.2, 1) forwards; position: relative; overflow: hidden; } #${t} .progress-bar-loading::after { content: ''; position: absolute; top: 0; left: 0; bottom: 0; width: 100%; background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent); animation: ${t}_shimmer 1.5s infinite; } @keyframes ${t}_progress { from { width: 0 } to { width: 100% } } @keyframes ${t}_shimmer { 0% { transform: translateX(-100%); } 100% { transform: translateX(100%); } } .dragon-logo{ width: 250px; height: 250px; margin-bottom: 15px; \ttransition: opacity 1s ease-out, visibility 1s ease-out; opacity: 1; visibility: visible; transition: opacity 1.5s ease-in-out, }  .hide{opacity:0;visibility: hidden} `,s=document.createElement("style");s.textContent=r,s.id="loadingStyle";const d=document.createElement("div");d.classList.add("loading-content"),d.innerHTML=' <div class="loading-container" id="loading-system-container"> <div><img src="" id="dragon-logo-img" class="dragon-logo hide" alt="bulk gmail checker logo"></div> <div class="typewriter-text"> <h1 style="color: red; font-family: \'Orbitron\', sans-serif;"><span style="color: #e0e0e0; opacity: 0.7;">BULK</span> GMAIL CHECKER</h1> </div> <div class="progress-container-loading" id="progress-container-loading"> <div class="progress-bar-loading"></div> </div> </div> ';const c=document.createElement("div");c.id=t,docBody.style.backgroundImage="",docHead.appendChild(s),docBody.appendChild(c),c.appendChild(d),await setLogoImage(),await setBackgroundImage();document.getElementById("dragon-logo-img").classList.remove("hide"),await async function(){"fast"!==e&&(await new Promise((e=>setTimeout(e,a))),await new Promise((e=>{var t=document.createElement("script");t.src=`${assetsBasePath}/js/main/INIT-SYSTEM.js`,t.id="INIT-SYSTEM",t.onload=e,document.body.appendChild(t)})),await new Promise((e=>{var t=document.createElement("script");t.src=`${assetsBasePath}/js/main/INIT-DB.js`,t.id="INIT-DB",t.type="module",t.onload=e,document.body.appendChild(t)})))}();const l=document.getElementById("progress-container-loading");document.getElementById("loading-system-container");return loadingProgressContainerMs=1e3*parseFloat(o),setTimeout((()=>{l.classList.add("hidden")}),loadingProgressContainerMs),animDurationMsPlus=a+200,setTimeout((()=>new Promise((e=>{document.getElementById("dragon-logo-img").classList.add("hide"),c.classList.add("fade-out"),setTimeout((()=>{c.parentNode&&c.remove(),s.parentNode&&s.parentNode.removeChild(s),e()}),500)}))),a),a}async function cacheAndSetImage(e,t,a,o="src"){let i=cacheUtils.get(t);if(i)"src"===o?a.src=i:"backgroundImage"===o&&(a.style.backgroundImage=`url("${i}")`);else{if(!hasVisited&&"dragon-logo-img"===a.id){return document.getElementById("dragon-logo-img").classList.add("hidden"),void(async()=>{try{const a=await fetch(e),o=await a.blob(),i=await new Promise(((e,t)=>{const a=new FileReader;a.onloadend=()=>e(a.result),a.onerror=t,a.readAsDataURL(o)}));cacheUtils.set(t,i)}catch(t){console.error(`Failed to cache logo image in background from ${e}:`,t)}})()}try{const i=await fetch(e),n=await i.blob(),r=await new Promise(((e,t)=>{const a=new FileReader;a.onloadend=()=>e(a.result),a.onerror=t,a.readAsDataURL(n)}));cacheUtils.set(t,r),"src"===o?a.src=r:"backgroundImage"===o&&(a.style.backgroundImage=`url("${r}")`)}catch(t){console.error(`Failed to cache or load image from ${e}:`,t),"src"===o?a.src=e:"backgroundImage"===o&&(a.style.backgroundImage=`url("${e}")`)}}}async function setLogoImage(){const e=document.getElementById("dragon-logo-img");e&&await cacheAndSetImage(`${assetsBasePath}/image/dragon-bulk-gmail-checker-logo.webp`,LOGO_CACHE_KEY,e,"src")}async function setBackgroundImage(){await cacheAndSetImage(`${assetsBasePath}/image/dragon-bulk-gmail-checker-background.webp`,BACKGROUND_CACHE_KEY,document.body,"backgroundImage")}function initLoadingSystem(){removeTempLayout();let e="slow",t=3550;hasVisited&&(e="normal",t=2050);createLoadingAnimation(e);return{duration:e,initDelay:t}}function createTempLayout(){const e=document.createElement("div");e.id="tempLayout",e.style.cssText="position: fixed; z-index:9999; width: 100%; height: 100%;background: radial-gradient(circle, rgba(26, 26, 26, 1) 0%, var(--primary-red) 60%, rgba(26, 26, 26, 1) 100%)",docBody&&docBody.prepend(e),docBody&&docBody.classList.remove("hidden")}function removeTempLayout(){const e=document.getElementById("tempLayout");e&&e.remove()}createTempLayout(),document.addEventListener("DOMContentLoaded",(function(){systemDelayStatus=initLoadingSystem(),systemDelay=systemDelayStatus.initDelay}));