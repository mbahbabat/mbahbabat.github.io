import{initializeApp}from"https://www.gstatic.com/firebasejs/11.3.0/firebase-app.js";import{getAuth,signInAnonymously,onAuthStateChanged,GoogleAuthProvider,getRedirectResult,signInWithPopup,signInWithRedirect,signOut}from"https://www.gstatic.com/firebasejs/11.3.0/firebase-auth.js";import{getDatabase,push,onValue,serverTimestamp,query,limitToLast,ref,set,get,update,remove,onDisconnect,child,orderByKey,startAfter,endBefore,orderByChild,equalTo,off,startAt,endAt,limitToFirst,onChildAdded,increment,runTransaction}from"https://www.gstatic.com/firebasejs/11.3.0/firebase-database.js";const crexs=bstx(h3tx(h3tx(bstx("MzYzNTM3MzkzNDYxMzYzODM2MzMzNDM3MzY2MzM0NjMzNTYxMzUzODM2NjIzNjM5MzQ2NjM2MzkzNDYxMzQzMjM1MzMzNTM4MzczMDM2MzgzNTM1MzMzMzM2NjMzNDMyMzUzMjMzMzEzNjM3MzczNDM1NjEzNTM3MzYzODM0MzczNDY1MzUzODM0MzIzNTM1MzUzOTMzMzMzNzMwMzUzNzM1NjEzNjYxMzUzNjM3MzkzNTMzMzQzNDM1NjEzMzMwMzUzMTM1MzUzNzM4MzQ2NDM1MzYzMzMzMzQzMjM0MzUzNjMxMzQzNjM0MzkzNzYxMzUzMzM2NjQzNjYzMzMzNDM1MzIzNjYyMzUzNTM2MzkzNDYzMzQzMzM0NjEzNjM4MzYzNDM1MzgzNTMyMzY2NjM1MzIzNDM3MzMzOTM3MzQzNTM5MzUzNzM2NjMzNzM1MzQzOTM2NjEzNjY2MzYzOTM2MzQzMzMyMzUzNjM2MzkzNDYzMzUzNzM0MzYzNzM1MzUzOTM1MzczNzM4MzMzNTM2MzQzNDM3MzY2MzM2NjEzNjMzMzczOTMzMzAzMzMyMzQ2NTMzMzIzNTYxMzYzOTM1NjEzNjM5MzMzNTM2NjQzNjMxMzUzODM0NjEzNjYzMzUzOTM2NjQzNDM2Mzc2MTM1NjEzNTM3MzQzNjM3MzczNjMzMzQzMzMzMzUzNjYxMzYzMjMzMzIzMzMwMzYzOTM0NjMzNDMzMzQ2MTM2NjIzNTM5MzUzODM1MzIzNjM4MzUzOTM2NjQzNDM2Mzc2MTM1NjEzNTM2MzUzNjM1MzMzNTM0MzQzMzM0MzkzMzM2MzQzOTM2NjQzNjM4MzMzMDM2MzQzNDM4MzQzMjM3NjEzNDY2MzYzOTMzMzgzNzM2MzYzNDMzMzIzNTM2MzYzOTM0NjMzNTM3MzQzNjM3MzUzNTM5MzUzNzM3MzgzMzM1MzYzNDM0MzczNjYzMzY2MTM2MzMzNzM5MzMzMDMzMzIzNDY1MzMzMjM1NjEzNjM5MzU2MTM2MzkzMzMxMzY2MjM1NjEzNTM3MzU2MTM2MzgzNjM0MzUzNzM3MzgzMzMwMzQ2MzM1MzgzNDYxMzMzMDM1NjEzNDM3MzQzOTM3MzUzNTM5MzUzODM0NjUzNzMwMzUzOTM1MzMzMzMxMzc2MTM2MzIzMzMzMzUzNjMzMzAzNjMxMzQzNzM1MzYzNjM4MzYzMzMzMzMzNTMxMzczODM0NjMzNjY0MzU2MTM3MzAzNjMzMzY2NDM1MzYzNjM5MzUzOTM1MzgzNDY1MzY2MzM1NjEzNDM3MzQzNjMzMzAzNTM5MzUzNzM0NjEzNjM4MzYzMzMzMzIzNTM1MzczNTM1MzkzNTM4MzQzMjM3MzczNDM5MzYzOTM3MzczNjM5MzYzMzM0MzgzNDYxMzczNjM2MzEzNjY0MzUzNjM2NjEzNjM0MzQzNTM2NjMzNjYyMzQzOTM2NjEzNjY2MzYzNzM0MzkzNjY1MzYzNDM2NjMzNTM5MzYzOTMzMzEzNjM4MzYzMjM2NjQzNDM2MzczMzM2MzUzNTM4MzUzMjM3MzAzNTM5MzMzMzM0NjQzNzM0MzQ2NTM2NjEzNjM0MzY2NDM1MzkzNjY0MzUzOTM2MzkzNDYzMzQzMzM0NjEzNzYxMzYzNDM0MzczMzM5MzczOTM1MzkzNTM3MzYzNDM2NjMzNTMxMzY2NTM1MzYzNjYxMzYzMTMzMzIzNTM2MzMzMDM0MzkzNjYxMzY2NjM2MzkzNjM0MzMzMjM1MzYzNjM5MzQ2MzM1MzczNDM2MzczNTM1MzkzNTM3MzczODMzMzUzNjM0MzQzNzM2NjMzNjYxMzYzMzM3MzkzMzMwMzMzMjM0NjUzMzMyMzU2MTM2MzkzNTYxMzYzOTMzMzUzNjY0MzYzMTM1MzgzNDYxMzY2MzM1MzkzNjY0MzQzNjM3NjEzNTYxMzUzODM0NjUzMzMwMzYzMjMzMzMzNDYxMzYzODM1NjEzMzMyMzUzNTM3MzUzNTM5MzUzODM0MzIzNzM3MzQzOTM2MzkzNzM3MzYzOTM2MzIzNTM3MzUzNjM3NjEzNjMzMzMzMjM0MzYzNjY1MzYzMTM1MzczMzM1MzY2NTM1MzUzMzMyMzUzNjM3MzUzNTYxMzQzNzM1MzYzNzM5MzUzMzM1MzczNTMxMzYzOTM0NjYzNjM5MzQzOTMzMzIzNDY0MzQzNDM0NjQzMzM0MzQ2NjM0MzQzNTMxMzMzNDM0NjYzNTM0MzQzMTMzMzUzNDY0MzY2MTM1MzkzNjM5MzQ2MzM0MzMzNDYxMzYzODM2MzMzNDM4MzQzMjM0NjEzNTYxMzQzMzM0MzkzMzM2MzQzOTM2NjEzNDM1MzMzNjM0NjUzNjYxMzQzMTM3NjEzNDY2MzQzNDM2MzczMzMwMzQ2NjM0MzQzNjYyMzczNzM0NjYzNTM0MzQzOTMzMzIzNDY2MzY2NTM2MzQzNjYzMzUzOTM2NjEzNzMwMzY2MjM0NjYzNTM3MzUzOTM3MzkzNDY0MzQzNzM1MzEzMzMwMzUzOTMzMzIzNTMxMzczOTM1NjEzNjYxMzUzOTM3NjEzNDY2MzUzNzM1MzYzNjYzMzUzOTM1MzQzNDYxMzY2MzM0NjYzNDM3MzQ2MTM2NjQzNDM5MzYzOTM3MzczNjM5MzYzMjM1MzczNTM2MzYzODM2MzMzMzMzMzUzNjM3MzkzNTYxMzUzNzMzMzEzNjYzMzYzMjM2NjUzNTMyMzQ2MTM1NjEzNDMzMzQzOTMzMzYzNDM5MzY2MjM2MzMzNzM0MzUzNTM3NjEzNDM2MzQ2NDM0NjYzNTM1MzMzNTM1MzMzNDY0MzY2MzM2NjYzMzMwMzUzNDM1MzMzNDYxMzMzOQ")))),crex=JSON.parse(crexs),analyticsApp=initializeApp(crex,"analytics"),analyticsAuth=getAuth(analyticsApp),analyticsDb=getDatabase(analyticsApp),currentAppsRef={1:"globalWebAnalytics/apps/gmail-dot-trick",2:"globalWebAnalytics/apps/gmail-checker",3:"globalWebAnalytics/apps/gmail-checker-ID"},currentAppRef=currentAppsRef[1],sanitizeAppName=e=>e.split("/").pop().split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" "),prettyAppName=sanitizeAppName(currentAppRef);console.log("%cWELCOME TO %c"+prettyAppName,"color: #61dafb; font-weight: bold; font-size: 16px;","color: #a259ff; font-weight: bold; font-size: 18px; text-shadow: 1px 1px 2px rgba(0,0,0,0.3);");let currentUser=null,justLoggedin=!1;async function initApp(){try{await signInApp(),await setupAuthListener()}catch(e){console.error("Failed to initialize Firebase:",e)}}async function setupAuthListener(){onAuthStateChanged(analyticsAuth,(async e=>{currentUser=e,currentUser?await updateUserPresence():(currentUser=null,await signInApp())}))}async function signInApp(){let e=0;try{await signInAnonymously(analyticsAuth),justLoggedin=!0}catch(t){e<3&&(e++,setTimeout((async()=>{await signInAnonymously(analyticsAuth)}),1e3))}}async function updateUserPresence(){try{const e=Date.now(),{ip:t,country:z,code:M}=await fetchLocationInfo(),a=sanitizeKey(t),n=sanitizeKey(z),s=currentUser.uid,r=ref(analyticsDb,`${currentAppRef}/ipToCustomUid/${a}`),i=ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid/${s}`),c=await generateCustomUid(a,s,r,i),o=`users/${c}`,l=ref(analyticsDb,`${currentAppRef}/${o}`);await set(r,c),await set(i,c),await cleanupExcessiveMappings(c,3),await cleanupExcessiveHistory(c,5);const u=!(await get(l)).exists(),N=sanitizeDate(),p=sanitizeWeek(),f=sanitizeMonth(),y=ref(analyticsDb,`${currentAppRef}/${o}/IPHistory/${a}`),d=ref(analyticsDb,`${currentAppRef}/${o}/FirebaseUIDHistory/${s}`);await set(y,{timestamp:serverTimestamp(),countryCode:M}),await set(d,{timestamp:serverTimestamp()});const w=ref(analyticsDb,`${currentAppRef}/${o}/UserPresence`),j=await get(w);let D=!1;if(j.exists()){const t=j.val().userLastSeen||0;(e-t)/6e4>=15&&!u&&(D=!0)}let g=0;const m=3;for(;g<m;)try{await updateStatus(M,a,n,s,w);break}catch(e){g++,g===m&&console.error("Failed after retries:",e),await new Promise((e=>setTimeout(e,1e3*g)))}const $=`${currentAppRef}/stats`;u&&(await update(ref(analyticsDb,`${$}/newUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/newUsers/daily/${N}/country/${M}`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/newUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/newUsers/weekly/${p}/country/${M}`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/newUsers/monthly/${f}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/newUsers/monthly/${f}/country/${M}`),{count:increment(1)}));const T=ref(analyticsDb,`${$}/onlineUsers/daily/${N}/${c}`),U=ref(analyticsDb,`${$}/onlineUsers/weekly/${p}/${c}`),Y=ref(analyticsDb,`${$}/onlineUsers/monthly/${f}/${c}`),[h,b,x]=await Promise.all([get(T),get(U),get(Y)]);h.exists()||(await set(T,!0),await update(ref(analyticsDb,`${$}/onlineUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/onlineUsers/daily/${N}/country/${M}`),{count:increment(1)})),b.exists()||(await set(U,!0),await update(ref(analyticsDb,`${$}/onlineUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/onlineUsers/weekly/${p}/country/${M}`),{count:increment(1)})),x.exists()||(await set(Y,!0),await update(ref(analyticsDb,`${$}/onlineUsers/monthly/${f}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/onlineUsers/monthly/${f}/country/${M}`),{count:increment(1)}));const A=ref(analyticsDb,`${$}/countries/daily/${N}/${M}/users/${c}`),k=ref(analyticsDb,`${$}/countries/weekly/${p}/${M}/users/${c}`),E=ref(analyticsDb,`${$}/countries/monthly/${f}/${M}/users/${c}`),v=ref(analyticsDb,`${$}/countries/total/${M}/users/${c}`),Q=ref(analyticsDb,`${$}/countries/total/${M}/countryName`),[O,I,C,R,P]=await Promise.all([get(A),get(k),get(E),get(v),get(Q)]);O.exists()||(await set(A,!0),await update(ref(analyticsDb,`${$}/countries/daily/${N}/${M}`),{count:increment(1)})),I.exists()||(await set(k,!0),await update(ref(analyticsDb,`${$}/countries/weekly/${p}/${M}`),{count:increment(1)})),C.exists()||(await set(E,!0),await update(ref(analyticsDb,`${$}/countries/monthly/${f}/${M}`),{count:increment(1)})),R.exists()||(await set(v,!0),await update(ref(analyticsDb,`${$}/countries/total/${M}`),{count:increment(1)})),P.exists()||await update(ref(analyticsDb,`${$}/countries/total/${M}`),{countryName:n}),D&&(await update(ref(analyticsDb,`${$}/returningUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/returningUsers/daily/${N}/country/${M}`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/returningUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/returningUsers/weekly/${p}/country/${M}`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/returningUsers/monthly/${f}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${$}/returningUsers/monthly/${f}/country/${M}`),{count:increment(1)}))}catch(e){throw console.error("presence failed:",e),e}}async function updateStatus(e,t,z,M,a){let n=null,s="unknown",r="unknown",i=null,c=null,o=null,l=!1,u=!1,N=!1;const p=3e5,f=6e5,y=1e4,d=["visibilitychange","online","offline","mousedown","mousemove","keypress","scroll","touchstart","click","keydown","wheel"],w=["visibilitychange","online","offline"];async function j(e){if(a){if((!u||"online"===e)&&e!==r&&(s!==e||l))try{await update(a,{status:e,userLastSeen:serverTimestamp()}),s=e,"online"===e&&(u=!1)}catch(e){console.error("Error updating status:",e)}}else console.error("userPresenceRef is undefined")}function D(){o&&(clearInterval(o),o=null),c&&(clearInterval(c),c=null)}function g(){i&&(clearTimeout(i),i=null),D()}async function m(){N&&(g(),navigator.onLine?"visible"===document.visibilityState?(u&&(u=!1,l=!1),await j("online"),D()):(i=setTimeout((async()=>{N&&await j("idle")}),p),"offline"!==r||u||u||o||(l=!0,o=setInterval((async()=>{"offline"===r||u||await j("idle")}),y)),u||c||u||(l=!0,c=setInterval((async()=>{"idle"!==r||u||(await j("offline"),u=!0,D())}),f))):await j("offline"))}function $(){N=!1,n&&(n(),n=null),g(),w.forEach((e=>{window.removeEventListener(e,m)})),d.forEach((e=>{document.removeEventListener(e,m)}))}n=onValue(a,(e=>{const t=e.val();r=t?.status||"unknown"}));try{if(!currentUser)return await j("offline"),void $();onDisconnect(a).update({status:"offline",userLastSeen:serverTimestamp()}).catch(console.error),justLoggedin&&(await set(a,{status:"online",userLastSeen:serverTimestamp(),LastIP:t,LastFirebaseUID:M,countryCode:e,countryName:z}),justLoggedin=!1),await forceResetStatus(),await cleanupCorruptedUsers(),await async function(){N=!0,w.forEach((e=>window.addEventListener(e,m))),d.forEach((e=>document.addEventListener(e,m,{passive:!0}))),await m()}()}catch(e){console.error("Initial setup error:",e)}return{stopMonitoring:$}}async function forceResetStatus(){const e=18e5;try{const t=Date.now(),z=ref(analyticsDb,`${currentAppRef}/resetStatus`),M=await get(z),a=M.val()?.lastReset||0;if(M.exists()||await async function(){try{await set(z,{lastReset:serverTimestamp(),resetBy:"system"})}catch(e){console.error("Analytics: Error initializing resetStatus node:",e)}}(),t-a<e)return;if((await runTransaction(z,(z=>{if(z){const M=z.lastReset||0;if(t-M<e)return;return z.lastReset=serverTimestamp(),z.resetBy=currentUser.uid||system,z}return{lastReset:serverTimestamp(),resetBy:currentUser.uid}}))).committed){const e=ref(analyticsDb,`${currentAppRef}/users`),t=await get(e);if(t.exists()){const e={};t.forEach((t=>{const z=t.key,M=t.val()?.UserPresence;M&&"offline"!==M.status&&(e[`${currentAppRef}/users/${z}/UserPresence/status`]="offline",e[`${currentAppRef}/users/${z}/UserPresence/userLastSeen`]=serverTimestamp())})),Object.keys(e).length>0?await update(ref(analyticsDb),e):console.warn("Analytics: No online or idle users found to reset.")}else console.warn("Analytics: No users found in the database.")}else console.warn("Analytics: Force reset transaction aborted. Another client might have updated it, or interval not met.")}catch(e){console.error("Analytics: Error during force reset status:",e)}}async function cleanupCorruptedUsers(){try{const e=ref(analyticsDb,`${currentAppRef}/users`),t=await get(e);if(!t.exists())return;const z=[];t.forEach((e=>{const t=e.val(),M=e.key;t.IPHistory&&t.FirebaseUIDHistory||(console.warn(`Cleaning up corrupted user: ${M}`),z.push(remove(ref(analyticsDb,`${currentAppRef}/users/${M}`))),z.push(cleanupCorruptedUserMappings(M)))})),z.length>0&&(await Promise.all(z),console.warn(`Cleaned up ${z.length} corrupted users`))}catch(e){console.error("Error in cleanupCorruptedUsers:",e)}}async function cleanupCorruptedUserMappings(e){try{const t=ref(analyticsDb,`${currentAppRef}/ipToCustomUid`),z=await get(t);if(z.exists()){const t=[];z.forEach((z=>{z.val()===e&&t.push(remove(ref(analyticsDb,`${currentAppRef}/ipToCustomUid/${z.key}`)))})),await Promise.all(t)}const M=ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid`),a=await get(M);if(a.exists()){const t=[];a.forEach((z=>{z.val()===e&&t.push(remove(ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid/${z.key}`)))})),await Promise.all(t)}}catch(e){console.error("Error cleaning up mappings:",e)}}async function cleanupExcessiveMappings(e,t=3){try{const z=ref(analyticsDb,`${currentAppRef}/ipToCustomUid`),M=await get(z);if(M.exists()){const z=M.val(),a=[];if(Object.keys(z).forEach((t=>{z[t]===e&&a.push(t)})),a.length>t){const t=a.slice(0,a.length-1),z=t.map((e=>remove(ref(analyticsDb,`${currentAppRef}/ipToCustomUid/${e}`))));await Promise.all(z),console.warn(`Cleaned up ${t.length} excessive IP mappings for user ${e}`)}}const a=ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid`),n=await get(a);if(n.exists()){const z=n.val(),M=[];if(Object.keys(z).forEach((t=>{z[t]===e&&M.push(t)})),M.length>t){const t=M.slice(0,M.length-1),z=t.map((e=>remove(ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid/${e}`))));await Promise.all(z),console.warn(`Cleaned up ${t.length} excessive UID mappings for user ${e}`)}}}catch(e){console.error("Error cleaning up excessive mappings:",e)}}async function cleanupExcessiveHistory(e,t=5){try{const z=ref(analyticsDb,`${currentAppRef}/users/${e}/IPHistory`),M=await get(z);if(M.exists()){const z=M.val(),a=Object.keys(z);if(a.length>t){const M=a.sort(((e,t)=>(z[e].timestamp||0)-(z[t].timestamp||0))),n=M.slice(0,M.length-t),s=n.map((t=>remove(ref(analyticsDb,`${currentAppRef}/users/${e}/IPHistory/${t}`))));await Promise.all(s),console.warn(`Cleaned up ${n.length} excessive IP history entries for user ${e}`)}}const a=ref(analyticsDb,`${currentAppRef}/users/${e}/FirebaseUIDHistory`),n=await get(a);if(n.exists()){const z=n.val(),M=Object.keys(z);if(M.length>t){const a=M.sort(((e,t)=>(z[e].timestamp||0)-(z[t].timestamp||0))),n=a.slice(0,a.length-t),s=n.map((t=>remove(ref(analyticsDb,`${currentAppRef}/users/${e}/FirebaseUIDHistory/${t}`))));await Promise.all(s),console.warn(`Cleaned up ${n.length} excessive UID history entries for user ${e}`)}}}catch(e){console.error("Error cleaning up excessive history:",e)}}async function generateCustomUid(e,t,z,M){try{let e=null;const t=await get(z);if(t.exists()&&(e=t.val()),!e){const t=await get(M);t.exists()&&(e=t.val())}if(e)return await cleanupExcessiveMappings(e,3),e;let a=generateRandom8Chars(),n=ref(analyticsDb,`${currentAppRef}/users/${a}`),s=!1,r=0;for(;!s&&r<10;){(await get(n)).exists()?(a=generateRandom8Chars(),n=ref(analyticsDb,`${currentAppRef}/users/${a}`),r++):s=!0}return s||(console.error("Failed to generate unique customUid after 10 attempts"),setTimeout((()=>{window.location.reload()}),3e3)),a}catch(e){throw console.error("Error in generateCustomUid:",e),e}}async function fetchLocationInfo(){const e=["1874cf82555e4b0a92757d43d75644d2","4df5b64e9f204b559e96dc3b6dd4a86b","482673d945c5418ba9327d5040870cd9","136eedb47fb14865a50c4b56843723d5","00adbd6bdf9641528ed76495c14cf000","11e9c42d7dba4031a0f7c3a27e78b5d3","ed21430487dc4042b7c874754a7375fb","19e8d406be0b4d0cbdd5f4d1cd4efc78"],t=e[Math.floor(Math.random()*e.length)],z=`https://api.ipgeolocation.io/ipgeo?apiKey=${t}`;try{const e=await fetch(z);if(!e.ok)throw new Error("API request failed");const t=await e.json();return{ip:(t.ip||"Unknown").toLowerCase(),country:(t.country_name||"Unknown").toLowerCase(),region:t.state_prov?t.state_prov.toLowerCase():"unknown",city:(t.city||"Unknown").toLowerCase(),code:t.country_code2||"Unknown"}}catch(e){return console.warn(`Failed to use API key: ${t}`,e.message),{ip:"unknown",country:"unknown",region:"unknown",city:"unknown",code:"unknown"}}}function generateRandom8Chars(){const e="0123456789";let t="";for(let z=0;z<8;z++)t+=e.charAt(Math.floor(10*Math.random()));return t}function sanitizeKey(e){return e?e.toLowerCase().replace(/\./g,"-").replace(/@/g,"_at_").replace(/#/g,"_hash_").replace(/\$/g,"_dollar_").replace(/\[/g,"_openbracket_").replace(/\]/g,"_closebracket_").replace(/\//g,"_slash_"):null}function desanitizeEmail(e){return e?e.replace(/-/g,".").replace(/_at_/g,"@").replace(/_hash_/g,"#").replace(/_dollar_/g,"$").replace(/_openbracket_/g,"[").replace(/_closebracket_/g,"]").replace(/_slash_/g,"/"):null}function sanitizeDate(e=new Date){return`${e.getFullYear()}${String(e.getMonth()+1).padStart(2,"0")}${String(e.getDate()).padStart(2,"0")}`}function sanitizeWeek(e=new Date){return`${e.getFullYear()}W${String(getWeekNumber(e)).padStart(2,"0")}`}function sanitizeMonth(e=new Date){return`${e.getFullYear()}${String(e.getMonth()+1).padStart(2,"0")}`}function getWeekNumber(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate())),z=(t.getUTCDay()+6)%7;t.setUTCDate(t.getUTCDate()-z+3);const M=t.valueOf();return t.setUTCMonth(0,1),4!==t.getUTCDay()&&t.setUTCMonth(0,1+(4-t.getUTCDay()+7)%7),1+Math.ceil((M-t)/6048e5)}initApp();
