import{initializeApp}from"https://www.gstatic.com/firebasejs/11.3.0/firebase-app.js";import{getAuth,signInAnonymously,onAuthStateChanged,GoogleAuthProvider,getRedirectResult,signInWithPopup,signInWithRedirect,signOut}from"https://www.gstatic.com/firebasejs/11.3.0/firebase-auth.js";import{getDatabase,push,onValue,serverTimestamp,query,limitToLast,ref,set,get,update,remove,onDisconnect,child,orderByKey,startAfter,endBefore,orderByChild,equalTo,off,startAt,endAt,limitToFirst,onChildAdded,increment,runTransaction}from"https://www.gstatic.com/firebasejs/11.3.0/firebase-database.js";const crexs=bstx(h3tx(h3tx(bstx("MzYzNTM3MzkzNDYxMzYzODM2MzMzNDM3MzY2MzM0NjMzNTYxMzUzODM2NjIzNjM5MzQ2NjM2MzkzNDYxMzQzMjM1MzMzNTM4MzczMDM2MzgzNTM1MzMzMzM2NjMzNDMyMzUzMjMzMzEzNjM3MzczNDM1NjEzNTM3MzYzODM0MzczNDY1MzUzODM0MzIzNTM1MzUzOTMzMzMzNzMwMzUzNzM1NjEzNjYxMzUzNjM3MzkzNTMzMzQzNDM1NjEzMzMwMzUzMTM1MzUzNzM4MzQ2NDM1MzYzMzMzMzQzMjM0MzUzNjMxMzQzNjM0MzkzNzYxMzUzMzM2NjQzNjYzMzMzNDM1MzIzNjYyMzUzNTM2MzkzNDYzMzQzMzM0NjEzNjM4MzYzNDM1MzgzNTMyMzY2NjM1MzIzNDM3MzMzOTM3MzQzNTM5MzUzNzM2NjMzNzM1MzQzOTM2NjEzNjY2MzYzOTM2MzQzMzMyMzUzNjM2MzkzNDYzMzUzNzM0MzYzNzM1MzUzOTM1MzczNzM4MzMzNTM2MzQzNDM3MzY2MzM2NjEzNjMzMzczOTMzMzAzMzMyMzQ2NTMzMzIzNTYxMzYzOTM1NjEzNjM5MzMzNTM2NjQzNjMxMzUzODM0NjEzNjYzMzUzOTM2NjQzNDM2Mzc2MTM1NjEzNTM3MzQzNjM3MzczNjMzMzQzMzMzMzUzNjYxMzYzMjMzMzIzMzMwMzYzOTM0NjMzNDMzMzQ2MTM2NjIzNTM5MzUzODM1MzIzNjM4MzUzOTM2NjQzNDM2Mzc2MTM1NjEzNTM2MzUzNjM1MzMzNTM0MzQzMzM0MzkzMzM2MzQzOTM2NjQzNjM4MzMzMDM2MzQzNDM4MzQzMjM3NjEzNDY2MzYzOTMzMzgzNzM2MzYzNDMzMzIzNTM2MzYzOTM0NjMzNTM3MzQzNjM3MzUzNTM5MzUzNzM3MzgzMzM1MzYzNDM0MzczNjYzMzY2MTM2MzMzNzM5MzMzMDMzMzIzNDY1MzMzMjM1NjEzNjM5MzU2MTM2MzkzMzMxMzY2MjM1NjEzNTM3MzU2MTM2MzgzNjM0MzUzNzM3MzgzMzMwMzQ2MzM1MzgzNDYxMzMzMDM1NjEzNDM3MzQzOTM3MzUzNTM5MzUzODM0NjUzNzMwMzUzOTM1MzMzMzMxMzc2MTM2MzIzMzMzMzUzNjMzMzAzNjMxMzQzNzM1MzYzNjM4MzYzMzMzMzMzNTMxMzczODM0NjMzNjY0MzU2MTM3MzAzNjMzMzY2NDM1MzYzNjM5MzUzOTM1MzgzNDY1MzY2MzM1NjEzNDM3MzQzNjMzMzAzNTM5MzUzNzM0NjEzNjM4MzYzMzMzMzIzNTM1MzczNTM1MzkzNTM4MzQzMjM3MzczNDM5MzYzOTM3MzczNjM5MzYzMzM0MzgzNDYxMzczNjM2MzEzNjY0MzUzNjM2NjEzNjM0MzQzNTM2NjMzNjYyMzQzOTM2NjEzNjY2MzYzNzM0MzkzNjY1MzYzNDM2NjMzNTM5MzYzOTMzMzEzNjM4MzYzMjM2NjQzNDM2MzczMzM2MzUzNTM4MzUzMjM3MzAzNTM5MzMzMzM0NjQzNzM0MzQ2NTM2NjEzNjM0MzY2NDM1MzkzNjY0MzUzOTM2MzkzNDYzMzQzMzM0NjEzNzYxMzYzNDM0MzczMzM5MzczOTM1MzkzNTM3MzYzNDM2NjMzNTMxMzY2NTM1MzYzNjYxMzYzMTMzMzIzNTM2MzMzMDM0MzkzNjYxMzY2NjM2MzkzNjM0MzMzMjM1MzYzNjM5MzQ2MzM1MzczNDM2MzczNTM1MzkzNTM3MzczODMzMzUzNjM0MzQzNzM2NjMzNjYxMzYzMzM3MzkzMzMwMzMzMjM0NjUzMzMyMzU2MTM2MzkzNTYxMzYzOTMzMzUzNjY0MzYzMTM1MzgzNDYxMzY2MzM1MzkzNjY0MzQzNjM3NjEzNTYxMzUzODM0NjUzMzMwMzYzMjMzMzMzNDYxMzYzODM1NjEzMzMyMzUzNTM3MzUzNTM5MzUzODM0MzIzNzM3MzQzOTM2MzkzNzM3MzYzOTM2MzIzNTM3MzUzNjM3NjEzNjMzMzMzMjM0MzYzNjY1MzYzMTM1MzczMzM1MzY2NTM1MzUzMzMyMzUzNjM3MzUzNTYxMzQzNzM1MzYzNzM5MzUzMzM1MzczNTMxMzYzOTM0NjYzNjM5MzQzOTMzMzIzNDY0MzQzNDM0NjQzMzM0MzQ2NjM0MzQzNTMxMzMzNDM0NjYzNTM0MzQzMTMzMzUzNDY0MzY2MTM1MzkzNjM5MzQ2MzM0MzMzNDYxMzYzODM2MzMzNDM4MzQzMjM0NjEzNTYxMzQzMzM0MzkzMzM2MzQzOTM2NjEzNDM1MzMzNjM0NjUzNjYxMzQzMTM3NjEzNDY2MzQzNDM2MzczMzMwMzQ2NjM0MzQzNjYyMzczNzM0NjYzNTM0MzQzOTMzMzIzNDY2MzY2NTM2MzQzNjYzMzUzOTM2NjEzNzMwMzY2MjM0NjYzNTM3MzUzOTM3MzkzNDY0MzQzNzM1MzEzMzMwMzUzOTMzMzIzNTMxMzczOTM1NjEzNjYxMzUzOTM3NjEzNDY2MzUzNzM1MzYzNjYzMzUzOTM1MzQzNDYxMzY2MzM0NjYzNDM3MzQ2MTM2NjQzNDM5MzYzOTM3MzczNjM5MzYzMjM1MzczNTM2MzYzODM2MzMzMzMzMzUzNjM3MzkzNTYxMzUzNzMzMzEzNjYzMzYzMjM2NjUzNTMyMzQ2MTM1NjEzNDMzMzQzOTMzMzYzNDM5MzY2MjM2MzMzNzM0MzUzNTM3NjEzNDM2MzQ2NDM0NjYzNTM1MzMzNTM1MzMzNDY0MzY2MzM2NjYzMzMwMzUzNDM1MzMzNDYxMzMzOQ")))),crex=JSON.parse(crexs),analyticsApp=initializeApp(crex,"analytics"),analyticsAuth=getAuth(analyticsApp),analyticsDb=getDatabase(analyticsApp),currentAppsRef={1:"globalWebAnalytics/apps/gmail-dot-trick",2:"globalWebAnalytics/apps/gmail-checker",3:"globalWebAnalytics/apps/gmail-checker-ID",4:"globalWebAnalytics/apps/bulk-gmail-checker",5:"globalWebAnalytics/apps/combine-exe"},currentAppRef=currentAppsRef[4],sanitizeAppName=e=>e.split("/").pop().split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" "),prettyAppName=sanitizeAppName(currentAppRef);console.log("%cWELCOME TO %c"+prettyAppName,"color: #61dafb; font-weight: bold; font-size: 16px;","color: #a259ff; font-weight: bold; font-size: 18px; text-shadow: 1px 1px 2px rgba(0,0,0,0.3);");let currentUser=null,justLoggedin=!1;async function initApp(){try{await signInApp(),await setupAuthListener()}catch(e){console.error("Failed to initialize Firebase:",e)}}async function setupAuthListener(){onAuthStateChanged(analyticsAuth,(async e=>{currentUser=e,currentUser?await updateUserPresence():(currentUser=null,await signInApp())}))}async function signInApp(){let e=0;try{await signInAnonymously(analyticsAuth),justLoggedin=!0}catch(t){e<3&&(e++,setTimeout((async()=>{await signInAnonymously(analyticsAuth)}),1e3))}}async function updateUserPresence(){try{const e=Date.now(),{ip:t,country:a,code:n}=await fetchLocationInfo(),z=sanitizeKey(t),M=sanitizeKey(a),s=currentUser.uid,r=ref(analyticsDb,`${currentAppRef}/ipToCustomUid/${z}`),i=ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid/${s}`),c=await generateCustomUid(z,s,r,i),o=`users/${c}`,l=ref(analyticsDb,`${currentAppRef}/${o}`);await set(r,c),await set(i,c),await cleanupExcessiveMappings(c,3),await cleanupExcessiveHistory(c,5);const u=!(await get(l)).exists(),N=sanitizeDate(),p=sanitizeWeek(),y=sanitizeMonth(),f=ref(analyticsDb,`${currentAppRef}/${o}/IPHistory/${z}`),d=ref(analyticsDb,`${currentAppRef}/${o}/FirebaseUIDHistory/${s}`);await set(f,{timestamp:serverTimestamp(),countryCode:n}),await set(d,{timestamp:serverTimestamp()});const w=ref(analyticsDb,`${currentAppRef}/${o}/UserPresence`),$=await get(w);let D=!1;if($.exists()){(e-($.val().userLastSeen||0))/6e4>=15&&!u&&(D=!0)}let j=0;const m=3;for(;j<m;)try{await updateStatus(n,z,M,s,w);break}catch(e){j++,j===m&&console.error("Failed after retries:",e),await new Promise((e=>setTimeout(e,1e3*j)))}const g=`${currentAppRef}/stats`,U=ref(analyticsDb,`${g}/uniqueUsers/daily/${N}/${c}`),T=ref(analyticsDb,`${g}/uniqueUsers/weekly/${p}/${c}`),b=ref(analyticsDb,`${g}/uniqueUsers/monthly/${y}/${c}`),Y=ref(analyticsDb,`${g}/uniqueUsers/total/${c}`),[h,x,A,k]=await Promise.all([get(U),get(T),get(b),get(Y)]);h.exists()||(await set(U,!0),await update(ref(analyticsDb,`${g}/uniqueUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/uniqueUsers/daily/${N}/country/${n}`),{count:increment(1)})),x.exists()||(await set(T,!0),await update(ref(analyticsDb,`${g}/uniqueUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/uniqueUsers/weekly/${p}/country/${n}`),{count:increment(1)})),A.exists()||(await set(b,!0),await update(ref(analyticsDb,`${g}/uniqueUsers/monthly/${y}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/uniqueUsers/monthly/${y}/country/${n}`),{count:increment(1)})),k.exists()||(await set(Y,!0),await update(ref(analyticsDb,`${g}/uniqueUsers/total/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/uniqueUsers/total/country/${n}`),{count:increment(1)})),u&&(await update(ref(analyticsDb,`${g}/newUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/newUsers/daily/${N}/country/${n}`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/newUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/newUsers/weekly/${p}/country/${n}`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/newUsers/monthly/${y}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/newUsers/monthly/${y}/country/${n}`),{count:increment(1)}));const E=ref(analyticsDb,`${g}/onlineUsers/daily/${N}/${c}`),v=ref(analyticsDb,`${g}/onlineUsers/weekly/${p}/${c}`),Q=ref(analyticsDb,`${g}/onlineUsers/monthly/${y}/${c}`),[O,I,C]=await Promise.all([get(E),get(v),get(Q)]);O.exists()||(await set(E,!0),await update(ref(analyticsDb,`${g}/onlineUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/onlineUsers/daily/${N}/country/${n}`),{count:increment(1)})),I.exists()||(await set(v,!0),await update(ref(analyticsDb,`${g}/onlineUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/onlineUsers/weekly/${p}/country/${n}`),{count:increment(1)})),C.exists()||(await set(Q,!0),await update(ref(analyticsDb,`${g}/onlineUsers/monthly/${y}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/onlineUsers/monthly/${y}/country/${n}`),{count:increment(1)}));const R=ref(analyticsDb,`${g}/countries/daily/${N}/${n}/users/${c}`),P=ref(analyticsDb,`${g}/countries/weekly/${p}/${n}/users/${c}`),_=ref(analyticsDb,`${g}/countries/monthly/${y}/${n}/users/${c}`),L=ref(analyticsDb,`${g}/countries/total/${n}/users/${c}`),[S,q,F,W]=await Promise.all([get(R),get(P),get(_),get(L)]);S.exists()||(await set(R,!0),await update(ref(analyticsDb,`${g}/countries/daily/${N}/${n}`),{count:increment(1)})),q.exists()||(await set(P,!0),await update(ref(analyticsDb,`${g}/countries/weekly/${p}/${n}`),{count:increment(1)})),F.exists()||(await set(_,!0),await update(ref(analyticsDb,`${g}/countries/monthly/${y}/${n}`),{count:increment(1)})),W.exists()||(await set(L,!0),await update(ref(analyticsDb,`${g}/countries/total/${n}`),{count:increment(1)})),D&&(await update(ref(analyticsDb,`${g}/returningUsers/daily/${N}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/returningUsers/daily/${N}/country/${n}`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/returningUsers/weekly/${p}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/returningUsers/weekly/${p}/country/${n}`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/returningUsers/monthly/${y}/total`),{count:increment(1)}),await update(ref(analyticsDb,`${g}/returningUsers/monthly/${y}/country/${n}`),{count:increment(1)}))}catch(e){throw console.error("presence failed:",e),e}}async function updateStatus(e,t,a,n,z){let M=null,s="unknown",r="unknown",i=null,c=null,o=null,l=!1,u=!1,N=!1;const p=3e5,y=6e5,f=1e4,d=["visibilitychange","online","offline","mousedown","mousemove","keypress","scroll","touchstart","click","keydown","wheel"],w=["visibilitychange","online","offline"];async function $(e){if(z){if((!u||"online"===e)&&e!==r&&(s!==e||l))try{await update(z,{status:e,userLastSeen:serverTimestamp()}),s=e,"online"===e&&(u=!1)}catch(e){console.error("Error updating status:",e)}}else console.error("userPresenceRef is undefined")}function D(){o&&(clearInterval(o),o=null),c&&(clearInterval(c),c=null)}function j(){i&&(clearTimeout(i),i=null),D()}async function m(){N&&(j(),navigator.onLine?"visible"===document.visibilityState?(u&&(u=!1,l=!1),await $("online"),D()):(i=setTimeout((async()=>{N&&await $("idle")}),p),"offline"!==r||u||u||o||(l=!0,o=setInterval((async()=>{"offline"===r||u||await $("idle")}),f)),u||c||u||(l=!0,c=setInterval((async()=>{"idle"!==r||u||(await $("offline"),u=!0,D())}),y))):await $("offline"))}function g(){N=!1,M&&(M(),M=null),j(),w.forEach((e=>{window.removeEventListener(e,m)})),d.forEach((e=>{document.removeEventListener(e,m)}))}M=onValue(z,(e=>{const t=e.val();r=t?.status||"unknown"}));try{if(!currentUser)return await $("offline"),void g();onDisconnect(z).update({status:"offline",userLastSeen:serverTimestamp()}).catch(console.error),justLoggedin&&(await set(z,{status:"online",userLastSeen:serverTimestamp(),LastIP:t,LastFirebaseUID:n,countryCode:e}),justLoggedin=!1),await forceResetStatus(),await cleanupCorruptedUsers(),await async function(){N=!0,w.forEach((e=>window.addEventListener(e,m))),d.forEach((e=>document.addEventListener(e,m,{passive:!0}))),await m()}()}catch(e){console.error("Initial setup error:",e)}return{stopMonitoring:g}}async function forceResetStatus(){const e=108e5;try{const t=Date.now(),a=ref(analyticsDb,`${currentAppRef}/resetStatus`),n=await get(a),z=n.val()?.lastReset||0;if(n.exists()||await async function(){try{await set(a,{lastReset:serverTimestamp(),resetBy:"system"})}catch(e){console.error("Analytics: Error initializing resetStatus node:",e)}}(),t-z<e)return;if((await runTransaction(a,(a=>{if(a){const n=a.lastReset||0;if(t-n<e)return;return a.lastReset=serverTimestamp(),a.resetBy=currentUser.uid||system,a}return{lastReset:serverTimestamp(),resetBy:currentUser.uid}}))).committed){const e=ref(analyticsDb,`${currentAppRef}/users`),t=await get(e);if(t.exists()){const e={};t.forEach((t=>{const a=t.key,n=t.val()?.UserPresence;n&&"offline"!==n.status&&(e[`${currentAppRef}/users/${a}/UserPresence/status`]="offline",e[`${currentAppRef}/users/${a}/UserPresence/userLastSeen`]=serverTimestamp())})),Object.keys(e).length>0?await update(ref(analyticsDb),e):console.warn("Analytics: No online or idle users found to reset.")}else console.warn("Analytics: No users found in the database.")}else console.warn("Analytics: Force reset transaction aborted. Another client might have updated it, or interval not met.")}catch(e){console.error("Analytics: Error during force reset status:",e)}}async function cleanupCorruptedUsers(){try{const e=ref(analyticsDb,`${currentAppRef}/users`),t=await get(e);if(!t.exists())return;const a=[];t.forEach((e=>{const t=e.val(),n=e.key;t.IPHistory&&t.FirebaseUIDHistory||(console.warn(`Cleaning up corrupted user: ${n}`),a.push(remove(ref(analyticsDb,`${currentAppRef}/users/${n}`))),a.push(cleanupCorruptedUserMappings(n)))})),a.length>0&&(await Promise.all(a),console.warn(`Cleaned up ${a.length} corrupted users`))}catch(e){console.error("Error in cleanupCorruptedUsers:",e)}}async function cleanupCorruptedUserMappings(e){try{const t=ref(analyticsDb,`${currentAppRef}/ipToCustomUid`),a=await get(t);if(a.exists()){const t=[];a.forEach((a=>{a.val()===e&&t.push(remove(ref(analyticsDb,`${currentAppRef}/ipToCustomUid/${a.key}`)))})),await Promise.all(t)}const n=ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid`),z=await get(n);if(z.exists()){const t=[];z.forEach((a=>{a.val()===e&&t.push(remove(ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid/${a.key}`)))})),await Promise.all(t)}}catch(e){console.error("Error cleaning up mappings:",e)}}async function cleanupExcessiveMappings(e,t=3){try{const a=ref(analyticsDb,`${currentAppRef}/ipToCustomUid`),n=await get(a);if(n.exists()){const a=n.val(),z=[];if(Object.keys(a).forEach((t=>{a[t]===e&&z.push(t)})),z.length>t){const t=z.slice(0,z.length-1),a=t.map((e=>remove(ref(analyticsDb,`${currentAppRef}/ipToCustomUid/${e}`))));await Promise.all(a),console.warn(`Cleaned up ${t.length} excessive IP mappings for user ${e}`)}}const z=ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid`),M=await get(z);if(M.exists()){const a=M.val(),n=[];if(Object.keys(a).forEach((t=>{a[t]===e&&n.push(t)})),n.length>t){const t=n.slice(0,n.length-1),a=t.map((e=>remove(ref(analyticsDb,`${currentAppRef}/firebaseUidToCustomUid/${e}`))));await Promise.all(a),console.warn(`Cleaned up ${t.length} excessive UID mappings for user ${e}`)}}}catch(e){console.error("Error cleaning up excessive mappings:",e)}}async function cleanupExcessiveHistory(e,t=5){try{const a=ref(analyticsDb,`${currentAppRef}/users/${e}/IPHistory`),n=await get(a);if(n.exists()){const a=n.val(),z=Object.keys(a);if(z.length>t){const n=z.sort(((e,t)=>(a[e].timestamp||0)-(a[t].timestamp||0))),M=n.slice(0,n.length-t),s=M.map((t=>remove(ref(analyticsDb,`${currentAppRef}/users/${e}/IPHistory/${t}`))));await Promise.all(s),console.warn(`Cleaned up ${M.length} excessive IP history entries for user ${e}`)}}const z=ref(analyticsDb,`${currentAppRef}/users/${e}/FirebaseUIDHistory`),M=await get(z);if(M.exists()){const a=M.val(),n=Object.keys(a);if(n.length>t){const z=n.sort(((e,t)=>(a[e].timestamp||0)-(a[t].timestamp||0))),M=z.slice(0,z.length-t),s=M.map((t=>remove(ref(analyticsDb,`${currentAppRef}/users/${e}/FirebaseUIDHistory/${t}`))));await Promise.all(s),console.warn(`Cleaned up ${M.length} excessive UID history entries for user ${e}`)}}}catch(e){console.error("Error cleaning up excessive history:",e)}}async function generateCustomUid(e,t,a,n){try{let e=null;const t=await get(a);if(t.exists()&&(e=t.val()),!e){const t=await get(n);t.exists()&&(e=t.val())}if(e)return await cleanupExcessiveMappings(e,3),e;let z=generateRandom8Chars(),M=ref(analyticsDb,`${currentAppRef}/users/${z}`),s=!1,r=0;for(;!s&&r<10;)(await get(M)).exists()?(z=generateRandom8Chars(),M=ref(analyticsDb,`${currentAppRef}/users/${z}`),r++):s=!0;return s||(console.error("Failed to generate unique customUid after 10 attempts"),setTimeout((()=>{window.location.reload()}),3e3)),z}catch(e){throw console.error("Error in generateCustomUid:",e),e}}async function fetchLocationInfo(){const e=["1874cf82555e4b0a92757d43d75644d2","4df5b64e9f204b559e96dc3b6dd4a86b","482673d945c5418ba9327d5040870cd9","136eedb47fb14865a50c4b56843723d5","00adbd6bdf9641528ed76495c14cf000","11e9c42d7dba4031a0f7c3a27e78b5d3","ed21430487dc4042b7c874754a7375fb","19e8d406be0b4d0cbdd5f4d1cd4efc78"],t=e[Math.floor(Math.random()*e.length)],a=`https://api.ipgeolocation.io/ipgeo?apiKey=${t}`;try{const e=await fetch(a);if(!e.ok)throw new Error("API request failed");const t=await e.json();return{ip:(t.ip||"Unknown").toLowerCase(),country:(t.country_name||"Unknown").toLowerCase(),region:t.state_prov?t.state_prov.toLowerCase():"unknown",city:(t.city||"Unknown").toLowerCase(),code:t.country_code2||"Unknown"}}catch(e){return console.warn(`Failed to use API key: ${t}`,e.message),{ip:"unknown",country:"unknown",region:"unknown",city:"unknown",code:"unknown"}}}function generateRandom8Chars(){let e="";for(let t=0;t<8;t++)e+="0123456789".charAt(Math.floor(10*Math.random()));return e}function sanitizeKey(e){return e?e.toLowerCase().replace(/\./g,"-").replace(/@/g,"_at_").replace(/#/g,"_hash_").replace(/\$/g,"_dollar_").replace(/\[/g,"_openbracket_").replace(/\]/g,"_closebracket_").replace(/\//g,"_slash_"):null}function desanitizeEmail(e){return e?e.replace(/-/g,".").replace(/_at_/g,"@").replace(/_hash_/g,"#").replace(/_dollar_/g,"$").replace(/_openbracket_/g,"[").replace(/_closebracket_/g,"]").replace(/_slash_/g,"/"):null}function sanitizeDate(e=new Date){return`${e.getFullYear()}${String(e.getMonth()+1).padStart(2,"0")}${String(e.getDate()).padStart(2,"0")}`}function sanitizeWeek(e=new Date){return`${e.getFullYear()}W${String(getWeekNumber(e)).padStart(2,"0")}`}function sanitizeMonth(e=new Date){return`${e.getFullYear()}${String(e.getMonth()+1).padStart(2,"0")}`}function getWeekNumber(e){const t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate())),a=(t.getUTCDay()+6)%7;t.setUTCDate(t.getUTCDate()-a+3);const n=t.valueOf();return t.setUTCMonth(0,1),4!==t.getUTCDay()&&t.setUTCMonth(0,1+(4-t.getUTCDay()+7)%7),1+Math.ceil((n-t)/6048e5)}initApp();