async function STARTSYSTEM(){blockUpdateMessages(!0),loadingState.classList.remove("hideSmooth","hidden");const t="gmailChecker_apiData";function e(){try{const e=localStorage.getItem(t);if(!e)return null;const a=JSON.parse(e);return Date.now()-a.timestamp>31104e6?null:a}catch(t){return console.error("Error parsing cached API data:",t),null}}let a=null;const n=e();if(n&&n.apiKey)return a=n.apiKey,START(),window.handleGenerateKey=async()=>({APIKEY:n.apiKey}),blockUpdateMessages(!1),loadingState.classList.add("hideSmooth"),void setTimeout((()=>{loadingState.classList.add("hidden"),"function"==typeof getApiStatsData&&getApiStatsData(),"function"==typeof initHistorySystem&&initHistorySystem()}),500);setTimeout((async function(){const{initializeApp:n}=await import("https://www.gstatic.com/firebasejs/11.3.0/firebase-app.js"),{getAuth:i,signInAnonymously:o,onAuthStateChanged:r}=await import("https://www.gstatic.com/firebasejs/11.3.0/firebase-auth.js"),{captchaSolver:s}=await import("../init/captcha.js"),{syncUser:c}=await import("../init/syncUser.js");let l,u,w=null,f=null,y=!1,d=null,h=null;async function p(){return h||(h=new Promise((async(t,e)=>{if(y)return t();try{y=!0;const e=localStorage.getItem("config");if(e)try{const a=JSON.parse(e);return l||(l=n(a),u=i(l)),void m(t)}catch(t){console.warn("Cached Firebase config is invalid, fetching fresh",t),localStorage.removeItem("config")}await g(),m(t)}catch(t){console.error("Firebase init error:",t),w=null,alert(`ðŸ”¥ Initialization failed: ${t.message}`),e(t)}finally{y=!1}})),h)}async function g(t=null){let e={};if(!w){const t=await fetch(`${DB_URL}/firebase-config`,{method:"GET"});if(!t.ok)throw new Error(`Challenge request failed: ${t.status}`);w=await t.json()}const a=`${w.nonce}:${w.salt}`,o=await async function(t,e){try{const a=new TextEncoder,n=await crypto.subtle.importKey("raw",a.encode(e),{name:"HMAC",hash:"SHA-256"},!1,["sign"]),i=await crypto.subtle.sign("HMAC",n,a.encode(t));return btoa(String.fromCharCode(...new Uint8Array(i))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}catch(t){throw console.error("HMAC generation error:",t),new Error("Failed to generate HMAC signature")}}(a,w.tempToken);e={token:w.tempToken,nonce:w.nonce,signature:o},t&&(e.captchaValue=t);const r=await fetch(`${DB_URL}/firebase-config`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(r.ok){const t=await r.json();return localStorage.setItem("config",JSON.stringify(t)),l||(l=n(t),u=i(l)),void await S()}const c=await r.json();switch(r.status){case 428:case 403:if(!c.captchaRequired&&428!==r.status)throw new Error(c.error||"Akses ditolak (403)");{const t=await s.solve(c.captchaData,403===r.status);w=null,await g(t)}break;case 429:throw alert(`ðŸ”¥ ${c.error}`),new Error("Rate limited");default:throw w=null,new Error(c.error||`Config request failed with status: ${r.status}`)}}function m(t){r(u,(async e=>{f=e,f?(await c(DB_URL,f,{forceFullUpdate:!0}),console.warn(" USER SYNCHRONIZING ..."),d=await f.getIdToken(!0),t&&(t(),t=null)):await S()}))}async function S(){let t=0;for(;t<3;)try{return void await o(u)}catch(e){if(console.error(`Attempt ${t+1} to sign in anonymously failed:`,e),t++,!(t<3))throw console.error("Failed to sign in anonymously after multiple attempts."),e;await new Promise((t=>setTimeout(t,1e3)))}}async function A(){if(h?await h:(console.warn("initFirebase was not called before handleGenerateKey. Initializing Firebase now..."),await p()),!f||!d){console.warn("currentUser or idToken not available after Firebase initialization. Attempting anonymous sign-in.");try{await S()}catch(t){throw new Error("Failed to get authenticated user or ID token after Firebase initialization.")}}const n=e();if(n&&n.apiKey)return a=n.apiKey,{APIKEY:n.apiKey};try{const e=await fetch(`${SERVER_URL}/generate-free-key`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${d}`}});if(!e.ok)throw new Error(`HTTP ${e.status}`);const n=await e.json();return a=n.apiKey,function(e){localStorage.setItem(t,JSON.stringify({...e,timestamp:Date.now()}))}({apiKey:a,type:"free"}),{APIKEY:a}}catch(t){throw console.error("Generate API Key error:",t),t}}await async function(){try{await p(),await A()}catch(t){console.error("Failed to initialize Firebase or get API Key:",t)}}(),START(),window.handleGenerateKey=A,blockUpdateMessages(!1),loadingState.classList.add("hideSmooth"),setTimeout((function(){loadingState.classList.add("hidden")}),500),setTimeout((()=>{"function"==typeof getApiStatsData&&getApiStatsData(),"function"==typeof initHistorySystem&&initHistorySystem()}),1e3)}),systemDelay+1e3)}STARTSYSTEM();