const errorEmailOverlay=document.getElementById("error-email-overlay"),errorEmailList=document.getElementById("error-email-list"),removeDuplicatesBtn=document.getElementById("remove-duplicates"),landingPage=document.getElementById("landing-page"),scrollToTop=document.getElementById("scroll-to-top"),removeInvalidBtn=document.getElementById("remove-invalid"),appInfo=document.getElementById("app-info"),combinedSection=document.getElementById("combined-section"),inputSection=document.getElementById("input-section"),outputSection=document.getElementById("output-section"),emailsInput=document.getElementById("emails-input"),actionBtn=document.getElementById("action-btn"),main=document.querySelector("main"),generateBtn=document.getElementById("generate-btn"),stopBtn=document.getElementById("stop-btn"),modeBtn=document.getElementById("mode-btn"),resetBtn=document.getElementById("reset-btn"),modeStatus=document.getElementById("mode-status"),optionMode=document.getElementById("option-mode"),closeModeBtn=document.getElementById("close-mode-btn"),selectModeH2=document.getElementById("select-mode-h2"),modeSpecs=document.getElementById("mode-specs"),downloadAllBtn=document.getElementById("download-all"),emailTasksContainer=document.getElementById("email-tasks"),globalProgress=document.getElementById("global-progress"),lineNumbers=document.getElementById("line-numbers"),DB_NAME="GmailDotTrickDB",DB_VERSION=1,STORE_NAME="emailResults",SERVER_URL="https://bulk-gmail-dot-trick.mbahbabat.workers.dev",cacheUtils={set:(e,t,s=36e5)=>{try{const o={data:t,timestamp:Date.now(),duration:s};return localStorage.setItem(e,JSON.stringify(o)),!0}catch(e){return console.warn("LocalStorage set failed:",e),!1}},get:e=>{try{const t=localStorage.getItem(e);if(!t)return null;const s=JSON.parse(t),o=s.duration||36e5;return Date.now()-s.timestamp>o?(localStorage.removeItem(e),null):s.data}catch(e){return console.warn("LocalStorage get failed:",e),null}},remove:e=>{try{return localStorage.removeItem(e),!0}catch(e){return console.warn("LocalStorage remove failed:",e),!1}}};let MAX_CONCURRENT_TASKS,CHUNK_LIMIT,MAX_COMBINATIONS,CHUNK_DELAY,appConfig,accessToken,emailTasks=new Map,allAppConfigs=null,activeWorkers=new Map,isProcessing=!1,completedTasks=0,totalTasks=0,emailQueue=[],currentEmailQueueIndex=0,currentProcessingBatch=new Set,isBatchCurrentlyActive=!1,db=null,terminatedProcess=!1;const domHelpers={show:(e,t="block")=>e.style.display=t,hide:e=>e.style.display="none",addClass:(e,t)=>e.classList.add(t),removeClass:(e,t)=>e.classList.remove(t),toggleClass:(e,t,s)=>s?e.classList.add(t):e.classList.remove(t),setHTML:(e,t)=>e.innerHTML=t,setText:(e,t)=>e.textContent=t,setStyle:(e,t)=>e.style.cssText=t},dbUtils={open:()=>new Promise(((e,t)=>{const s=indexedDB.open(DB_NAME,1);s.onerror=()=>t(s.error),s.onsuccess=()=>e(s.result),s.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains(STORE_NAME)&&t.deleteObjectStore(STORE_NAME),t.createObjectStore(STORE_NAME,{keyPath:"email"}).createIndex("expiry","expiry",{unique:!1})}})),save:async(e,t)=>(db=db||await dbUtils.open(),new Promise(((s,o)=>{if(terminatedProcess)return;const l=db.transaction([STORE_NAME],"readwrite").objectStore(STORE_NAME),a=Date.now()+72e5,n={email:e,combinations:t.combinations,compressedData:t.compressedData,expiry:a,timestamp:Date.now()},r=l.put(n);r.onerror=()=>o(r.error),r.onsuccess=()=>s()}))),get:async e=>(db=db||await dbUtils.open(),new Promise(((t,s)=>{const o=db.transaction([STORE_NAME],"readonly").objectStore(STORE_NAME).get(e);o.onerror=()=>s(o.error),o.onsuccess=()=>{const s=o.result;s&&s.expiry>Date.now()?t(s):(s&&dbUtils.delete(e),t(null))}}))),delete:async e=>(db=db||await dbUtils.open(),new Promise(((t,s)=>{const o=db.transaction([STORE_NAME],"readwrite").objectStore(STORE_NAME).delete(e);o.onerror=()=>s(o.error),o.onsuccess=()=>t()}))),getAll:async()=>(db=db||await dbUtils.open(),new Promise(((e,t)=>{const s=db.transaction([STORE_NAME],"readonly").objectStore(STORE_NAME).getAll();s.onerror=()=>t(s.error),s.onsuccess=()=>{const t=Date.now(),o=s.result.filter((e=>e.expiry>t));s.result.filter((e=>e.expiry<=t)).forEach((e=>dbUtils.delete(e.email))),e(o)}}))),clearAll:async()=>(db=db||await dbUtils.open(),new Promise(((e,t)=>{const s=db.transaction([STORE_NAME],"readwrite").objectStore(STORE_NAME).clear();s.onerror=()=>t(s.error),s.onsuccess=()=>e()}))),cleanupExpired:async()=>(db=db||await dbUtils.open(),new Promise(((e,t)=>{const s=db.transaction([STORE_NAME],"readwrite").objectStore(STORE_NAME).index("expiry"),o=IDBKeyRange.upperBound(Date.now()),l=s.openCursor(o);l.onerror=()=>t(l.error),l.onsuccess=t=>{const s=t.target.result;s?(s.delete(),s.continue()):e()}})))},modeUtils={get:()=>{let e=null;return document.querySelectorAll('input[name="mode"]').forEach((t=>{t.checked&&(e=t.value)})),e},updateSpecs:()=>{const e=modeUtils.get();let t="",s="",o="";const l={fast:{html:'<h3 style="color:#ff3300">Fast Mode Details</h3><p><strong style="color:#0ff;">Features:</strong></p><p><strong><i class="fa-solid fa-list-check"></i> Active Tasks:</strong> 10</p><p><strong><i class="fa-solid fa-wand-magic-sparkles"></i> Max Variations:</strong> Unlimited</p><p><strong><i class="fa-solid fa-gauge-high"></i> Speed:</strong> Up to 600,000/second</p><p><strong><i class="fa-solid fa-file-zipper"></i> File Compression:</strong> Best</p><p style="margin-top:20px"><strong style="color:#0ff">Minimum Device Spec:</strong></p><p><strong><i class="fa-solid fa-microchip"></i> CPU:</strong> 4-core, 8-thread</p><p><strong><i class="fa-solid fa-memory"></i> Memory:</strong> 16GB</p>',status:'Mode: <i class="fa-solid fa-circle" style="color:#ff3300"></i>',style:"border-left: 2px solid #ff3300;"},balance:{html:'<h3 style="color:#ffff00">Balance Mode Details</h3><p><strong style="color:#0ff;">Features:</strong></p><p><strong><i class="fa-solid fa-list-check"></i> Active Tasks:</strong> 3</p><p><strong><i class="fa-solid fa-wand-magic-sparkles"></i> Max Variations:</strong> 2,000,000</p><p><strong><i class="fa-solid fa-gauge-high"></i> Speed:</strong> Up to 200,000/second</p><p><strong><i class="fa-solid fa-file-zipper"></i> File Compression:</strong> Normal</p><p style="margin-top:20px"><strong style="color:#0ff">Minimum Device Spec:</strong></p><p><strong><i class="fa-solid fa-microchip"></i> CPU:</strong> 2-core, 4-thread</p><p><strong><i class="fa-solid fa-memory"></i> Memory:</strong> 4GB</p>',status:'Mode: <i class="fa-solid fa-circle" style="color:#ffff00"></i>',style:"border-left: 2px solid #ffff00;"},slow:{html:'<h3 style="color:#53ff1a">Slow Mode Details</h3><p><strong style="color:#0ff;">Features:</strong></p><p><strong><i class="fa-solid fa-list-check"></i> Active Tasks:</strong> 1</p><p><strong><i class="fa-solid fa-wand-magic-sparkles"></i> Max Variations:</strong> 250,000</p><p><strong><i class="fa-solid fa-gauge-high"></i> Speed:</strong> Up to 100,000/second</p><p><strong><i class="fa-solid fa-file-zipper"></i> File Compression:</strong> Low</p><p style="margin-top:20px"><strong style="color:#0ff">Minimum Device Spec:</strong></p><p><strong><i class="fa-solid fa-microchip"></i> CPU:</strong> 2-core, 2-thread</p><p><strong><i class="fa-solid fa-memory"></i> Memory:</strong> 2GB</p>',status:'Mode: <i class="fa-solid fa-circle" style="color:#53ff1a"></i>',style:"border-left: 2px solid #53ff1a;"}};l[e]&&(t=l[e].html,s=l[e].status,o=l[e].style),domHelpers.setHTML(modeStatus,s),domHelpers.setStyle(modeSpecs,o),domHelpers.setHTML(modeSpecs,t)}},serverUtils={getAccessToken:async()=>{const e=await fetch(`${SERVER_URL}/get-accessToken`);return(await e.json()).accessToken},getWc:async()=>{let e=cacheUtils.get("wc");if(e)return e;accessToken=accessToken||await serverUtils.getAccessToken();const t=await fetch(`${SERVER_URL}/wc`,{headers:{Authorization:`Bearer ${accessToken}`}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return e=await t.text(),cacheUtils.set("wc",e,31536e6),e},getAllConfigs:async()=>{let e=cacheUtils.get("all_app_configs");if(e)return e;accessToken=accessToken||await serverUtils.getAccessToken();const t=await fetch(`${SERVER_URL}/get-all-configs`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${accessToken}`}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return e=await t.json(),cacheUtils.set("all_app_configs",e,6048e5),e},getConfig:async()=>{if(allAppConfigs){const e=modeUtils.get();return allAppConfigs[e]}accessToken=accessToken||await serverUtils.getAccessToken();const e=modeUtils.get(),t=await fetch(`${SERVER_URL}/get-configs`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${accessToken}`},body:JSON.stringify({mode:e})});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const s=await t.json();return{maxConcurrentTasks:s.maxConcurrentTasks,chunkLimit:s.chunkLimit,allDownloadFilename:s.allDownloadFilename,singleDownloadFilename:s.singleDownloadFilename,nextTaskDelay:s.nextTaskDelay,compressionLevel:s.compressionLevel,maxCombinationsPerEmail:s.maxCombinationsPerEmail,delayPerChunk:s.delayPerChunk}}},workerUtils={create:async()=>{if(terminatedProcess)return;let e=cacheUtils.get("wc");e||(e=await serverUtils.getWc());const t=new Blob([e],{type:"application/javascript"}),s=URL.createObjectURL(t),o=new Worker(s);return o.onmessage=e=>{const{type:t,data:s}=e.data;switch(t){case"chunk":workerUtils.processChunk(s);break;case"error":workerUtils.handleError(s.email,s.message)}},o.onerror=e=>{let t=null;for(let[e,s]of activeWorkers)if(s===o){t=e;break}workerUtils.handleError(t,"Worker error: "+e.message)},o},processChunk:e=>{if(terminatedProcess)return;const{combinations:t,total:s,chunk:o,hasMore:l,email:a}=e,n=emailTasks.get(a);if(!n){const e=activeWorkers.get(a);return void(e&&e.terminate())}0===o&&(n.combinations=["=================================","* website: https://mbahbabat.github.io/gmail-dot-trick","* telegram: @mbahbabat","=================================",""]),n.combinations=[...n.combinations,...t],n.totalCombinations=s,n.processedCount=n.combinations.length;const r=Math.min(100,Math.round(n.processedCount/s*100));domHelpers.setStyle(n.progressBar,`width: ${r}%`),domHelpers.setText(n.progressBar,`${r}%`);const i=(Date.now()-n.startTime)/1e3,d=Math.round(n.processedCount/i);domHelpers.setHTML(n.details,`<div>Generated: ${n.processedCount}/${s}</div><div>Speed: ${d}/sec</div>`),l&&isProcessing&&"processing"===n.status?setTimeout((()=>{isProcessing&&emailTasks.has(a)&&activeWorkers.has(a)&&activeWorkers.get(a).postMessage({type:"generate",data:{email:a,chunk:o+1,limit:CHUNK_LIMIT,maxCombinations:MAX_COMBINATIONS}})}),CHUNK_DELAY):workerUtils.finishTask(a),uiUtils.updateGlobalProgress()},handleError:async(e,t)=>{if(!appConfig)return;const s=emailTasks.get(e),o=activeWorkers.get(e);s?(s.status="error",domHelpers.setText(s.details,"Error: "+t),domHelpers.setStyle(s.progressBar,"background: #ff4d4d"),domHelpers.removeClass(s.element,"active-task"),o&&(o.terminate(),activeWorkers.delete(e)),currentProcessingBatch.delete(e),completedTasks++,uiUtils.updateGlobalProgress(),0===currentProcessingBatch.size&&isBatchCurrentlyActive&&(isBatchCurrentlyActive=!1,currentEmailQueueIndex<emailQueue.length&&setTimeout(taskUtils.startNextBatch,appConfig.nextTaskDelay))):o&&o.terminate()},finishTask:async e=>{if(!appConfig||terminatedProcess)return;const t=emailTasks.get(e),s=activeWorkers.get(e);if(t){try{const s=new JSZip;s.file(e+appConfig.singleDownloadFilename,t.combinations.join("\n")),domHelpers.setHTML(t.downloadBtn,'<div><i class="fa-solid fa-spinner"></i> Preparing file...</div>'),domHelpers.setHTML(t.details,`<div>Generated: ${t.processedCount}/${t.totalCombinations}</div><div>Speed: 0/sec</div>`),domHelpers.setStyle(t.taskNumber,"box-shadow: 0 0 10px 2px rgba(77, 210, 255, 0.5);color:#00ffff;");const o=await s.generateAsync({type:"blob",compression:"DEFLATE",compressionOptions:{level:appConfig.compressionLevel}});await dbUtils.save(e,{combinations:t.combinations,compressedData:o}),t.combinations=[]}catch(s){console.error("IndexedDB error:",s),await dbUtils.save(e,{combinations:t.combinations,compressedData:null})}t.status="completed",domHelpers.setStyle(t.details,"color: #66ffd9"),domHelpers.setHTML(t.details,`<i class="fa-solid fa-check"></i> Generated: ${t.totalCombinations} Variations`),domHelpers.setStyle(t.progressBar,"background: linear-gradient(90deg, #006666, #009999, #00cccc); width: 100%"),domHelpers.setHTML(t.downloadBtn,'<div title="download as TXT file"><i class="fa-solid fa-download"></i> Download (TXT)</div>'),t.downloadBtn.disabled=!1,domHelpers.removeClass(t.openBtn,"hidden"),domHelpers.removeClass(t.element,"active-task"),s&&(s.terminate(),activeWorkers.delete(e)),currentProcessingBatch.delete(e),completedTasks++,uiUtils.updateGlobalProgress(),0===currentProcessingBatch.size&&isBatchCurrentlyActive&&(isBatchCurrentlyActive=!1,currentEmailQueueIndex<emailQueue.length&&setTimeout(taskUtils.startNextBatch,appConfig.nextTaskDelay))}}},taskUtils={create:(e,t)=>{if(terminatedProcess)return;const s=document.createElement("div");s.className="email-task",domHelpers.setHTML(s,`<div class="email-header"><div class="task-number">${t}</div><div class="email-address">${e}</div></div><div class="email-progress"><div class="progress-bar-container"><div class="progress-bar"></div></div></div><div class="task-actions"><div class="email-details"> In queue...</div><div class="result-btn"><button class="download-btn" disabled><i class="fa-regular fa-clock"></i> Pending...</button><button class="open-btn hidden">Open</button></div></div>`);const o={element:s,email:e,combinations:[],totalCombinations:0,processedCount:0,status:"pending",startTime:Date.now(),progressBar:s.querySelector(".progress-bar"),details:s.querySelector(".email-details"),downloadBtn:s.querySelector(".download-btn"),openBtn:s.querySelector(".open-btn"),taskNumber:s.querySelector(".task-number")};return o.downloadBtn.addEventListener("click",(()=>{downloadUtils.emailResults(e),o.downloadBtn.disabled=!0,domHelpers.setHTML(o.downloadBtn,'<i class="fa-solid fa-file-circle-check" style="color:#00ffff"></i> Downloaded')})),o.openBtn.addEventListener("click",(async()=>{const t=await dbUtils.get(e);if(!t||!t.combinations||0===t.combinations.length)return void alert("No data available to open for "+e);const s=t.combinations.join("\n"),o=new Blob([s],{type:"text/plain"}),l=URL.createObjectURL(o);window.open(l,"_blank"),setTimeout((()=>URL.revokeObjectURL(l)),1e3)})),emailTasks.set(e,o),emailTasksContainer.appendChild(s),o},startNextBatch:async()=>{if(!isProcessing||terminatedProcess||isBatchCurrentlyActive||currentEmailQueueIndex>=emailQueue.length)return;isBatchCurrentlyActive=!0,currentProcessingBatch.clear();let e=0;for(;e<MAX_CONCURRENT_TASKS&&currentEmailQueueIndex<emailQueue.length;){const t=emailQueue[currentEmailQueueIndex],s=emailTasks.get(t);if(s&&"pending"===s.status){domHelpers.setHTML(s.downloadBtn,'<i class="fa-solid fa-hourglass-start"></i> Generating...'),s.status="processing",s.startTime=Date.now(),domHelpers.addClass(s.element,"active-task");const o=await workerUtils.create();o&&(activeWorkers.set(t,o),currentProcessingBatch.add(t),o.postMessage({type:"generate",data:{email:t,chunk:0,limit:CHUNK_LIMIT,maxCombinations:MAX_COMBINATIONS}}),e++)}currentEmailQueueIndex++}uiUtils.updateGlobalProgress()}},uiUtils={updateGlobalProgress:()=>{if(0===totalTasks)return;const e=e=>1===e?"email":"emails",t=Math.round(completedTasks/totalTasks*100);if(terminatedProcess)return domHelpers.setStyle(resetBtn,"background:rgba(255,255,255,0.1);border:1px solid #ffcc00;box-shadow:0 0 10px 2px rgba(255, 169, 0, 0.5);"),domHelpers.setHTML(globalProgress,`<div style="color: #ff0000"><strong>Generating process has been stopped!</strong></div><div style="margin-top:5px; color:#fff">Overall Progress: ${completedTasks}/${totalTasks} ${e(completedTasks)} completed (${t}%)</div>`),emailTasks.forEach(((e,t)=>{"completed"!==e.status&&(e.status="canceled",domHelpers.setHTML(e.details,'<i class="fa-solid fa-ban" style="color:#ff9900"></i> Canceled'),domHelpers.setHTML(e.downloadBtn,'<i class="fa-solid fa-ban" style="color:#ff9900"></i> Failed'),e.downloadBtn.disabled=!0,domHelpers.removeClass(e.element,"active-task"))})),domHelpers.addClass(stopBtn,"hidden"),domHelpers.removeClass(generateBtn,"hidden"),completedTasks>0?(domHelpers.setHTML(downloadAllBtn,`<span title="download as ZIP file"><i class="fa-solid fa-file-zipper"></i> Download <span style="color:#ffcc99">${1===completedTasks?"1 result":`${completedTasks} results`}</span> (ZIP)</span>`),domHelpers.setStyle(downloadAllBtn,"cursor: pointer;"),downloadAllBtn.disabled=!1):(domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-circle-info"></i> No completed results to download'),domHelpers.setStyle(downloadAllBtn,"color: #999;"),downloadAllBtn.disabled=!0),void(resetBtn.disabled=!1);domHelpers.setText(globalProgress,`Overall Progress: ${completedTasks}/${totalTasks} ${e(completedTasks)} completed (${t}%)`),completedTasks<totalTasks&&uiUtils.requestScroll(),completedTasks===totalTasks&&(isProcessing=!1,domHelpers.setStyle(globalProgress,"color: #fff"),domHelpers.setHTML(globalProgress,`<div style="color:#00ffff">Completed!</div><div style="margin-top:5px">Total processed: ${completedTasks} of ${totalTasks} ${e(totalTasks)}.</div>`),domHelpers.setHTML(downloadAllBtn,`<span title="download as ZIP file"><i class="fa-solid fa-file-zipper"></i> Download <span style="color:#ffcc99">${1===completedTasks?"1 result":`${completedTasks} results`}</span> (ZIP)</span>`),domHelpers.setStyle(downloadAllBtn,"cursor: pointer"),downloadAllBtn.disabled=!1,domHelpers.removeClass(actionBtn,"hidden"),resetBtn.disabled=!1,domHelpers.setStyle(resetBtn,"background:rgba(255,255,255,0.1);border:1px solid #ffcc00;box-shadow:0 0 10px 2px rgba(255, 169, 0, 0.5);"),domHelpers.addClass(stopBtn,"hidden"),domHelpers.removeClass(generateBtn,"hidden")),terminatedProcess=!1},scrollToActiveTask:()=>{const e=Array.from(emailTasksContainer.children);for(const t of e){const e=t.querySelector(".email-address"),s=e?e.textContent.trim():null,o=s?emailTasks.get(s):null;if(o&&"completed"!==o.status)return void setTimeout((()=>{t.scrollIntoView({behavior:"smooth",block:"center"})}),100)}if(e.length>0){const t=e[e.length-1];setTimeout((()=>{t.scrollIntoView({behavior:"smooth",block:"center"})}),100)}},requestScroll:()=>{let e=!1;e||(e=!0,setTimeout((()=>{uiUtils.scrollToActiveTask(),e=!1}),200))},saveAs:(e,t)=>{const s=URL.createObjectURL(e),o=document.createElement("a");o.href=s,o.download=t,document.body.appendChild(o),o.click(),setTimeout((()=>{document.body.removeChild(o),URL.revokeObjectURL(s)}),100)}},validationUtils={isValidGmail:e=>{const t=e.trim();return/^[a-zA-Z0-9]+@gmail\.com$/i.test(t)},checkDuplicates:()=>{const e=emailsInput.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0&&validationUtils.isValidGmail(e))),t=new Set,s=[];for(const o of e){const e=o.split("@")[0].replace(/\./g,"").toLowerCase();t.has(e)?s.push(o):t.add(e)}return 0===s.length?(domHelpers.addClass(removeDuplicatesBtn,"hidden"),validationUtils.checkInvalidEmails()):(domHelpers.addClass(landingPage,"hidden"),domHelpers.addClass(optionMode,"hidden"),domHelpers.addClass(modeBtn,"hidden"),domHelpers.removeClass(errorEmailOverlay,"hidden"),domHelpers.setHTML(errorEmailList,s.map((e=>`<div class="duplicate-item">${e} <span style="color:#cc99ff">(Duplicate)</span></div>`)).join("")),domHelpers.setText(globalProgress,"Error: Duplicate Emails Found!"),domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-circle-info"></i> Invalid input!'),domHelpers.setStyle(removeDuplicatesBtn,"background: linear-gradient(90deg, rgba(255, 134, 154, 0.3),rgba(255, 134, 154, 0.6), rgba(255, 134, 154, 0.3));); border:none; box-shadow: 0 0 5px 1px rgba(255, 152, 31, 0.5); color: #fff"),domHelpers.setStyle(downloadAllBtn,"background: linear-gradient(90deg, transparent, rgba(130, 72, 179, 0.5), transparent); border:none; box-shadow: none; color: #ff6600"),domHelpers.addClass(removeInvalidBtn,"hidden"),domHelpers.removeClass(removeDuplicatesBtn,"hidden"),domHelpers.addClass(generateBtn,"hidden"),domHelpers.addClass(resetBtn,"hidden"),!1)},checkInvalidEmails:()=>{const e=emailsInput.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0)),t=[];for(const s of e){if((s.match(/@/g)||[]).length>1){t.push({email:s,msg:"Invalid email format - there is more than 1 email in 1 line"});continue}if(!s.includes("@")){t.push({email:s,msg:"Invalid email format - Missing @gmail.com"});continue}const[e,o]=s.split("@");"gmail.com"===o.toLowerCase()?0===e.length?t.push({email:s,msg:"Invalid email format - at least 1 character before @gmail.com"}):/^[a-zA-Z0-9]+$/.test(e)||t.push({email:s,msg:"Invalid email address - Only letters and numbers before @gmail.com"}):t.push({email:s,msg:"Invalid domain suffix - Only @gmail.com allowed"})}return 0===t.length?(domHelpers.addClass(errorEmailOverlay,"hidden"),domHelpers.addClass(removeInvalidBtn,"hidden"),domHelpers.removeClass(generateBtn,"hidden"),domHelpers.removeClass(resetBtn,"hidden"),domHelpers.removeClass(landingPage,"hidden"),domHelpers.removeClass(modeBtn,"hidden"),domHelpers.setText(globalProgress,""),domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-circle-info"></i> Click <span style="color:#cc99ff">"Generate"</span> to start!'),domHelpers.setStyle(downloadAllBtn,"background: transparent; border:none; box-shadow: none; color: #fff"),!0):(domHelpers.addClass(landingPage,"hidden"),domHelpers.removeClass(errorEmailOverlay,"hidden"),domHelpers.addClass(modeBtn,"hidden"),domHelpers.addClass(optionMode,"hidden"),domHelpers.setHTML(errorEmailList,t.map((e=>`<div class="invalid-item">${e.email} <span style="color:#cc99ff">(${e.msg})</span></div>`)).join("")),domHelpers.removeClass(removeInvalidBtn,"hidden"),domHelpers.setText(removeInvalidBtn,`Remove invalid ${1===t.length?"email":"emails"} to continue!`),domHelpers.setText(globalProgress,`Error: Found ${t.length} invalid ${1===t.length?"email":"emails"}`),domHelpers.addClass(generateBtn,"hidden"),domHelpers.addClass(resetBtn,"hidden"),domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-circle-info"></i> Invalid input!'),domHelpers.setStyle(removeInvalidBtn,"background: linear-gradient(90deg, rgba(255, 134, 154, 0.3),rgba(255, 134, 154, 0.6), rgba(255, 134, 154, 0.3)); border:none; box-shadow: 0 0 5px 1px rgba(255, 152, 31, 0.5); color: #fff"),domHelpers.setStyle(downloadAllBtn,"background: linear-gradient(90deg, transparent, rgba(130, 72, 179, 0.5), transparent); border:none; box-shadow: none; color: #ff6600"),!1)}},downloadUtils={emailResults:async e=>{if(!appConfig)return;const t=await dbUtils.get(e);if(!t||!t.combinations||0===t.combinations.length)return void alert("No data available for "+e);const s=t.combinations.join("\n");uiUtils.saveAs(new Blob([s],{type:"text/plain"}),e+appConfig.singleDownloadFilename)},allResults:async()=>{if(0===completedTasks)return;const e=document.querySelectorAll(".download-btn");document.querySelectorAll(".open-btn");var o;if(t=Array.from(emailTasks.values()).filter((e=>"completed"===e.status)),s=t.length,!appConfig)return;domHelpers.setHTML(globalProgress,'<div><i class="fa-solid fa-spinner" style="color:#fff"></i> Creating ZIP archive...</div>'),domHelpers.setStyle(globalProgress,"font-size: 1rem; color: #ffff00"),domHelpers.setStyle(downloadAllBtn,"display: flex;flex-direction: column;gap: 5px;background: rgba(0, 0, 0, 0.5);box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.5); color: #fff;padding: 5px;font-size: 0.8rem;"),domHelpers.setHTML(downloadAllBtn,`<div>Processing download <span style="color:#00ffff">${s}</span> ${o=s,1===o?"result":"results"}...</div><div style="color: #ff3300; text-shadow: 2px 2px 5px red #000; font-weight:900"><i class="fa-regular fa-clock" style="color:#fff"></i> This process may take a few minutes!</div>`),downloadAllBtn.disabled=!0,resetBtn.disabled=!0,e.forEach((e=>{e.disabled=!0}));const l=await dbUtils.getAll();if(0===l.length)return alert("No completed email data to download."),resetBtn.disabled=!1,downloadAllBtn.disabled=!1,domHelpers.setHTML(downloadAllBtn,`<span title="download all results as ZIP file"><i class="fa-solid fa-file-zipper"></i> Download <span style="color:#ffcc99">${1===s?"1 result":`${s} results`}</span> (ZIP)</span>`),void domHelpers.setStyle(downloadAllBtn,"color: #fff");try{const e=l.map((e=>{if(e.compressedData)return{name:e.email+appConfig.singleDownloadFilename.replace(".txt",".zip"),lastModified:new Date,input:e.compressedData};{const t=e.combinations.join("\n");return{name:e.email+appConfig.singleDownloadFilename,lastModified:new Date,input:t}}})),{downloadZip:s}=await import("../lib/clientZip.js"),o=await s(e).blob(),a=new Date;uiUtils.saveAs(o,`${l.length}-Gmail_Dot_Tricks-${a.toLocaleDateString()}-${a.toLocaleTimeString().replace(/:/g,"-")}.zip`),t.forEach((e=>{domHelpers.setHTML(e.downloadBtn,'<i class="fa-solid fa-file-circle-check" style="color:#00ffff"></i> Downloaded')})),t.forEach((e=>{domHelpers.addClass(e.openBtn,"hidden")})),resetBtn.disabled=!1,domHelpers.setText(globalProgress,""),domHelpers.setStyle(globalProgress,""),domHelpers.setStyle(downloadAllBtn,""),domHelpers.setStyle(downloadAllBtn,"color: #fff"),domHelpers.setHTML(downloadAllBtn,`<i class="fa-solid fa-circle-info"></i> successfully downloaded <span style="color:#00ffff">${1===l.length?"1 result":`${l.length} results`}!`),await dbUtils.clearAll(),resetUtils.task()}catch(e){console.error("Error creating ZIP file:",e),domHelpers.setText(downloadAllBtn,"Error creating ZIP file. Please try again."),downloadAllBtn.disabled=!1}}},inputUtils={verify:()=>{const e=emailsInput.value.split("\n").some((e=>e.trim().length>0));domHelpers.setStyle(downloadAllBtn,"background:transparent; border:none; box-shadow:none; color: #bf80ff"),domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-spinner"></i> Validating input...'),domHelpers.setText(globalProgress,"Please wait..."),setTimeout((()=>{e?(validationUtils.checkInvalidEmails(),validationUtils.checkDuplicates()):(generateBtn.style.color="",generateBtn.disabled=!0,domHelpers.removeClass(generateBtn,"hidden"),domHelpers.removeClass(resetBtn,"hidden"),domHelpers.removeClass(landingPage,"hidden"),domHelpers.removeClass(modeBtn,"hidden"),domHelpers.addClass(removeDuplicatesBtn,"hidden"),domHelpers.setStyle(downloadAllBtn,"background: linear-gradient(90deg, rgba(130, 72, 179, 0.5), #000); border:none; box-shadow: 0 0 5px 1px rgba(255, 190, 0, 0.5); color: #ffeb99"),domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-circle-info"></i> Please enter an email!'),domHelpers.setText(globalProgress,"Input is empty!"),domHelpers.addClass(errorEmailOverlay,"hidden"),domHelpers.addClass(removeInvalidBtn,"hidden"))}),500)},handleValue:()=>{emailsInput.value.split("\n").some((e=>e.trim().length>0))?(domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-circle-info"></i> Click <span style="color:#cc99ff">"Generate"</span> to start!'),domHelpers.setStyle(generateBtn,"background: rgba(175, 134, 252, 0.3); color: #cc99ff"),generateBtn.disabled=!1,domHelpers.setText(globalProgress,""),domHelpers.setStyle(downloadAllBtn,"background: linear-gradient(90deg, transparent, rgba(130, 72, 179, 0.5), transparent); border:none; box-shadow: none; color: #fff")):(domHelpers.setStyle(downloadAllBtn,"background: transparent; border:none; box-shadow: none;color:#9999ff; font-weight: 200"),domHelpers.setStyle(generateBtn,""),generateBtn.disabled=!0,domHelpers.setText(downloadAllBtn,"Waiting for results..."))},updateLineNumbers:()=>{const e=emailsInput.value.split("\n"),t=Math.max(1,e.length),s=document.createDocumentFragment();for(let e=1;e<=t;e++){const t=document.createElement("div");t.textContent=e,s.appendChild(t)}lineNumbers.innerHTML="",lineNumbers.appendChild(s),setTimeout((()=>{emailsInput.scrollTop=emailsInput.scrollHeight}),100)}},resetUtils={indexedDb:async()=>{try{await dbUtils.open(),await dbUtils.clearAll(),await dbUtils.cleanupExpired()}catch(e){console.error("indexedDB cleanup failed:",e)}},input:()=>{emailsInput.value="",emailsInput.readOnly=!1,emailsInput.addEventListener("input",(()=>{inputUtils.handleValue(),inputUtils.updateLineNumbers()})),inputUtils.handleValue(),inputUtils.updateLineNumbers()},ui:()=>{domHelpers.removeClass(inputSection,"hidden"),domHelpers.setStyle(combinedSection,""),domHelpers.setStyle(outputSection,""),setTimeout((()=>{landingPage.scrollTo({top:0,behavior:"smooth",block:"center"})}),100),landingPage.addEventListener("scroll",(function(){landingPage.scrollTop>100?(domHelpers.setStyle(landingPage,"background: transparent; position: absolute; border: none; box-shadow:none; top: 25px; left:0; height: calc(100% - 25px); padding: 100px 25px 25px 25px; border-radius: 5px"),domHelpers.setStyle(main,"background: transparent;box-shadow:none; border:none"),domHelpers.setStyle(outputSection,"width:0; height:0; border:0; background: none; position: fixed: top: 0; left:0"),domHelpers.addClass(inputSection,"hidden"),domHelpers.addClass(actionBtn,"hidden"),domHelpers.addClass(globalProgress,"hidden"),domHelpers.addClass(downloadAllBtn,"hidden"),domHelpers.removeClass(scrollToTop,"hidden")):(inputUtils.updateLineNumbers(),domHelpers.setStyle(landingPage,""),domHelpers.setStyle(main,""),domHelpers.setStyle(outputSection,""),domHelpers.removeClass(inputSection,"hidden"),domHelpers.removeClass(globalProgress,"hidden"),domHelpers.removeClass(actionBtn,"hidden"),domHelpers.removeClass(downloadAllBtn,"hidden"),domHelpers.addClass(scrollToTop,"hidden"))})),scrollToTop.addEventListener("click",(()=>{landingPage.scrollTo({top:0,behavior:"smooth",block:"center"})})),domHelpers.removeClass(downloadAllBtn,"hidden"),domHelpers.removeClass(generateBtn,"hidden"),domHelpers.addClass(stopBtn,"hidden"),domHelpers.setStyle(stopBtn,""),domHelpers.setStyle(downloadAllBtn,"background: transparent; border:none; box-shadow: none;color:#9999ff; font-weight: 200"),domHelpers.setStyle(resetBtn,""),domHelpers.setStyle(generateBtn,""),domHelpers.setStyle(globalProgress,"color: #ffeb99"),domHelpers.setHTML(emailTasksContainer,""),domHelpers.addClass(emailTasksContainer,"hidden"),domHelpers.removeClass(landingPage,"hidden"),domHelpers.addClass(optionMode,"hidden"),generateBtn.disabled=!0,resetBtn.disabled=!1,modeBtn.disabled=!1,domHelpers.setStyle(modeBtn,""),domHelpers.setText(globalProgress,"")},task:()=>{isProcessing=!1;for(let e of activeWorkers.values())e.terminate();activeWorkers.clear(),emailTasks.clear(),emailQueue=[],currentProcessingBatch.clear(),isBatchCurrentlyActive=!1,completedTasks=0,totalTasks=0,currentEmailQueueIndex=0,terminatedProcess=!1},all:async()=>{await resetUtils.indexedDb(),resetUtils.input(),resetUtils.task(),resetUtils.ui(),modeUtils.get(),modeUtils.updateSpecs()}};function initLineNumbers(){const e=document.createDocumentFragment();for(let t=0;t<10;t++){const t=document.createElement("div");e.appendChild(t)}lineNumbers.innerHTML="",lineNumbers.appendChild(e)}async function initDotTrick(){await resetUtils.all();const e=cacheUtils.get("wc"),t=cacheUtils.get("all_app_configs");if(e&&t){allAppConfigs=t;const e=modeUtils.get();return void(appConfig=allAppConfigs[e]||null)}allAppConfigs=await serverUtils.getAllConfigs();const s=modeUtils.get();appConfig=allAppConfigs[s]||null,e||await serverUtils.getWc()}function setupEventListeners(){generateBtn.addEventListener("click",(async function(){if(isProcessing)return;if(!validationUtils.checkDuplicates()||!validationUtils.checkInvalidEmails())return inputUtils.verify(),void emailsInput.addEventListener("input",(()=>{inputUtils.verify(),inputUtils.updateLineNumbers()}));generateBtn.disabled=!0,domHelpers.setStyle(generateBtn,""),resetBtn.disabled=!0,modeBtn.disabled=!0;const e=emailsInput.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0));if(0!==e.length){appConfig||(appConfig=allAppConfigs?allAppConfigs[modeUtils.get()]:await serverUtils.getConfig()),CHUNK_DELAY=appConfig.delayPerChunk,MAX_COMBINATIONS=appConfig.maxCombinationsPerEmail,MAX_CONCURRENT_TASKS=appConfig.maxConcurrentTasks,CHUNK_LIMIT=appConfig.chunkLimit,emailTasks.clear();for(let e of activeWorkers.values())e.terminate();activeWorkers.clear(),currentProcessingBatch.clear(),isBatchCurrentlyActive=!1,completedTasks=0,totalTasks=e.length,currentEmailQueueIndex=0,isProcessing=!0,domHelpers.setStyle(outputSection,"background: transparent;border:none"),domHelpers.setStyle(combinedSection,"flex-direction: column-reverse"),domHelpers.addClass(inputSection,"hidden"),emailsInput.readOnly=!0,domHelpers.addClass(optionMode,"hidden"),domHelpers.addClass(landingPage,"hidden"),domHelpers.removeClass(emailTasksContainer,"hidden"),downloadAllBtn.disabled=!0,domHelpers.setStyle(downloadAllBtn,"background: linear-gradient(90deg, transparent, rgba(122, 200, 255, 0.5), transparent); border:none; box-shadow: none;"),domHelpers.setHTML(downloadAllBtn,'<i class="fa-solid fa-envelope"></i> <strong> Generating...</strong>'),domHelpers.setText(globalProgress,`Starting ${totalTasks} email ${1===totalTasks?"task":"tasks"}...`),emailQueue=[],e.forEach(((e,t)=>{taskUtils.create(e,t+1),emailQueue.push(e)})),setTimeout((()=>{isProcessing&&(domHelpers.removeClass(stopBtn,"hidden"),domHelpers.addClass(generateBtn,"hidden"),domHelpers.setStyle(stopBtn,"background:rgba(255,255,255,0.1);border:1px solid #ffcc00;box-shadow:0 0 10px 2px rgba(255, 169, 0, 0.5);"))}),1e3),taskUtils.startNextBatch(),uiUtils.updateGlobalProgress()}else alert("Please enter at least one email!")})),stopBtn.addEventListener("click",(async function(){for(let e of activeWorkers.values())e.terminate();activeWorkers.clear(),currentProcessingBatch.clear(),isProcessing=!1,isBatchCurrentlyActive=!1,currentEmailQueueIndex=0,terminatedProcess=!0,uiUtils.updateGlobalProgress()})),resetBtn.addEventListener("click",initDotTrick),downloadAllBtn.addEventListener("click",downloadUtils.allResults),emailsInput.addEventListener("scroll",(function(){lineNumbers.scrollTop=this.scrollTop})),removeDuplicatesBtn.addEventListener("click",(async function(){const e=emailsInput.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0)),t=new Set,s=[],o=/^[a-zA-Z0-9]+@gmail\.com$/i;e.forEach((e=>{if(!o.test(e)||e.split("@")[0].includes("+")||e.split("@")[0].includes("."))s.push(e);else{const o=e.toLowerCase().split("@")[0].replace(/\./g,"").split("+")[0];t.has(o)||(t.add(o),s.push(e))}})),emailsInput.value=s.join("\n"),inputUtils.verify(),inputUtils.updateLineNumbers(),domHelpers.addClass(errorEmailOverlay,"hidden"),domHelpers.addClass(removeDuplicatesBtn,"hidden")})),removeInvalidBtn.addEventListener("click",(async function(){const e=emailsInput.value.split("\n").map((e=>e.trim())).filter((e=>e.length>0)),t=[];for(const s of e){if((s.match(/@/g)||[]).length>1)continue;if(!s.includes("@"))continue;const[e,o]=s.split("@");"gmail.com"===o.toLowerCase()&&e.length>0&&/^[a-zA-Z0-9]+$/.test(e)&&t.push(s)}emailsInput.value=t.join("\n"),inputUtils.verify(),inputUtils.updateLineNumbers(),domHelpers.addClass(errorEmailOverlay,"hidden"),domHelpers.addClass(removeInvalidBtn,"hidden")})),modeBtn.addEventListener("click",(function(){domHelpers.removeClass(optionMode,"hidden"),domHelpers.addClass(globalProgress,"hidden"),domHelpers.setStyle(optionMode,"background: none; display: flex; position: absolute; top:0; left:0; border: none; box-shadow: none;border-radius: 5px; z-index: 1000 "),domHelpers.setStyle(main,"background: transparent;box-shadow:none; border:none"),domHelpers.setStyle(outputSection,"width:0; height:0; border:0; box-shadow: none; background: none; position: fixed: top: 0; left:0"),domHelpers.addClass(landingPage,"hidden"),domHelpers.addClass(inputSection,"hidden"),domHelpers.addClass(actionBtn,"hidden"),domHelpers.addClass(downloadAllBtn,"hidden"),optionMode.scrollTo({top:0,behavior:"smooth",block:"center"})})),closeModeBtn.addEventListener("click",(()=>{inputUtils.updateLineNumbers(),domHelpers.removeClass(globalProgress,"hidden"),domHelpers.setStyle(optionMode,""),domHelpers.setStyle(main,""),domHelpers.addClass(optionMode,"hidden"),domHelpers.setStyle(outputSection,""),domHelpers.removeClass(landingPage,"hidden"),domHelpers.removeClass(inputSection,"hidden"),domHelpers.removeClass(actionBtn,"hidden"),domHelpers.removeClass(downloadAllBtn,"hidden")})),window.addEventListener("resize",inputUtils.updateLineNumbers),document.addEventListener("visibilitychange",inputUtils.updateLineNumbers),document.querySelectorAll('input[name="mode"]').forEach((e=>{e.addEventListener("change",(async()=>{const e=modeUtils.get();appConfig=allAppConfigs&&allAppConfigs[e]?allAppConfigs[e]:await serverUtils.getConfig(),modeUtils.updateSpecs()}))}))}setupEventListeners(),initDotTrick();((window) => { window.txbs = (tx) => btoa(tx); window.bsh3 = (tx) => tx.split('').reduce((h3, c) => h3 + c.charCodeAt(0).toString(16).padStart(2, '0'), ''); window.h3tx = (h3val) => Array.from({ length: h3val.length / 2 }, (_, i) => String.fromCharCode(parseInt(h3val.substr(i * 2, 2), 16))).join(''); window.bstx = (bsval) => atob(bsval); window.h3bs = (h3val) => btoa(String.fromCharCode(...new Uint8Array(h3val.match(/.{1,2}/g).map(byte => parseInt(byte, 16))))); window.txh3 = (tx) => tx.split('').reduce((h3, c) => h3 + c.charCodeAt(0).toString(16).padStart(2, '0'), ''); })